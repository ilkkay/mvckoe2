DEBUG | 2017-05-26 09:24:26 | [background-preinit] logging.LoggerFactory (LoggerFactory.java:19) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
INFO  | 2017-05-26 09:24:26 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
DEBUG | 2017-05-26 09:24:26 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:26 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:24:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:24:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:24:27 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:24:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:24:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:24:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:24:28 | [main] util.LogHelper (LogHelper.java:102) - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@764c12b6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@194d329e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/sw-tools/STS/translateit2testi/TranslateIT2v4/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		translateit2.persistence.model.Comment
		translateit2.persistence.model.History
		translateit2.persistence.model.Info
		translateit2.persistence.model.Note
		translateit2.persistence.model.Person
		translateit2.persistence.model.Project
		translateit2.persistence.model.Source
		translateit2.persistence.model.Target
		translateit2.persistence.model.TranslatorGroup
		translateit2.persistence.model.Unit
		translateit2.persistence.model.Work
		translateit2.util.LocalDateAttributeConverter]
	Mapping files names []
	Properties []
DEBUG | 2017-05-26 09:24:28 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG | 2017-05-26 09:24:28 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG | 2017-05-26 09:24:28 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG | 2017-05-26 09:24:28 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
INFO  | 2017-05-26 09:24:28 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 09:24:28 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 09:24:28 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
DEBUG | 2017-05-26 09:24:28 | [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG | 2017-05-26 09:24:28 | [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:74) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  | 2017-05-26 09:24:28 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bb1e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bb1e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61bb1e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41f4039e
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69de5bed
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fc165f6
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@115dcaea
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@115dcaea
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@115dcaea
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration character -> org.hibernate.type.CharacterType@6cae2e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char -> org.hibernate.type.CharacterType@6cae2e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6cae2e4d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@35d60381
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@35d60381
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35d60381
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration integer -> org.hibernate.type.IntegerType@6eb089e6
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration int -> org.hibernate.type.IntegerType@6eb089e6
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eb089e6
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@7fda2001
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@7fda2001
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fda2001
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@7698b7a4
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@7698b7a4
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7698b7a4
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7741d346
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7741d346
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6042d663
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6042d663
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration string -> org.hibernate.type.StringType@3f1a9a53
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f1a9a53
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a4aadf8
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64b70f41
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration url -> org.hibernate.type.UrlType@da4cf09
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@da4cf09
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration date -> org.hibernate.type.DateType@679dd234
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@679dd234
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration time -> org.hibernate.type.TimeType@1e8fb66f
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e8fb66f
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bfae028
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bfae028
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bfae028
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f677247
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar -> org.hibernate.type.CalendarType@7f13811b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f13811b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f13811b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40d52be7
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration locale -> org.hibernate.type.LocaleType@4391a2d8
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4391a2d8
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration currency -> org.hibernate.type.CurrencyType@286855ea
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@286855ea
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e1232cf
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e1232cf
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration class -> org.hibernate.type.ClassType@7c1a8f0f
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c1a8f0f
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33feda48
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33feda48
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52c9d3d0
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration binary -> org.hibernate.type.BinaryType@6fe595dc
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6fe595dc
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [B -> org.hibernate.type.BinaryType@6fe595dc
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@298b64f7
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@298b64f7
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@298b64f7
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration row_version -> org.hibernate.type.RowVersionType@2ba1209b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration image -> org.hibernate.type.ImageType@3a7b2e2
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration characters -> org.hibernate.type.CharArrayType@750ed637
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char[] -> org.hibernate.type.CharArrayType@750ed637
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [C -> org.hibernate.type.CharArrayType@750ed637
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4998e74b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4998e74b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4998e74b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration text -> org.hibernate.type.TextType@575cabf0
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ntext -> org.hibernate.type.NTextType@30bf26df
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration blob -> org.hibernate.type.BlobType@412c5e8b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@412c5e8b
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60f77af
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration clob -> org.hibernate.type.ClobType@3ece79fe
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ece79fe
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nclob -> org.hibernate.type.NClobType@11d2dd2d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@11d2dd2d
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3592c1c4
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@648c5fb3
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration serializable -> org.hibernate.type.SerializableType@4d705112
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration object -> org.hibernate.type.ObjectType@64763e49
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@64763e49
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8279e5
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2b53840a
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3caafa67
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e546734
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53747c4a
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64b0d1fa
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2276c9
DEBUG | 2017-05-26 09:24:28 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12d2ddde
DEBUG | 2017-05-26 09:24:28 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 09:24:28 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 09:24:28 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
INFO  | 2017-05-26 09:24:28 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:24:28 | [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Target]; ignoring
DEBUG | 2017-05-26 09:24:28 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Source]; ignoring
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trWork
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Work on table tr_work
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=backup_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property backupFile with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:backupFile]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for backupFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property backupFile
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=dead_line, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property deadLine with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for deadLine
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property deadLine
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=finished, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property finished with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for finished
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property finished
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=group, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property group
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property locale with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:locale]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for locale
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property locale
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=original_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property originalFile with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:originalFile]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for originalFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property originalFile
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=priority, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property priority with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:priority]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Priority]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for priority
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property priority
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=progress, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property progress with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:progress]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [double]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for progress
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property progress
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=project, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property project
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=skeleton_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonFile with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:skeletonFile]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonFile
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=started, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property started with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for started
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property started
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property status with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:status]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Status]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for status
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property status
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property version with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:version]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for version
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property version
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trInfo
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Info on table tr_info
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:text]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trProject
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Project on table tr_project
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=format, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property format with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:format]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileFormat]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for format
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property format
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=info, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property info
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:name]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=person, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property person
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=source_locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property sourceLocale with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:sourceLocale]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for sourceLocale
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property sourceLocale
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property type with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:type]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileType]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for type
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property type
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trUnit
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Unit on table tr_unit
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=segment_key, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property segmentKey with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:segmentKey]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for segmentKey
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property segmentKey
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=serial_number, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property serialNumber with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:serialNumber]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [int]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for serialNumber
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property serialNumber
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:plural]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:skeletonTag]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:text]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property source
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=comment, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property comment with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:comment]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Comment]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for comment
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property comment
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=equivalent, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property equivalent with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:equivalent]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [boolean]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for equivalent
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property equivalent
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=history, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property history with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:history]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [History]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for history
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property history
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=note, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property note with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:note]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Note]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for note
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property note
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:plural]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:skeletonTag]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=state, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property state with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:state]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [State]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for state
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property state
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:text]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property target
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=work, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property work
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trComment
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Comment on table tr_comment
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Comment:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trTranslatorGroup
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.TranslatorGroup on table tr_translatorgroup
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:name]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trNote
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Note on table tr_note
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_note), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Note:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trPerson
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Person on table tr_person
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property fullName with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:fullName]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for fullName
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property fullName
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trHistory
DEBUG | 2017-05-26 09:24:28 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.History on table tr_history
DEBUG | 2017-05-26 09:24:28 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.History:id]
DEBUG | 2017-05-26 09:24:28 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for backupFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for deadLine
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:24:28 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for finished
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:24:28 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for locale
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for originalFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for priority
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for progress
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonFile
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for started
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:24:28 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for status
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for version
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for format
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for sourceLocale
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for type
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for segmentKey
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for serialNumber
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for comment
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for equivalent
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for history
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for note
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:24:28 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for state
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for fullName
DEBUG | 2017-05-26 09:24:28 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_work]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_info]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_project]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_unit]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_comment]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_translatorgroup]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_note]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_person]
DEBUG | 2017-05-26 09:24:28 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_history]
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:28 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:212) - Building session factory
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:73) - Statistics: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@636985df
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:110) - Connection release mode: ON_CLOSE
DEBUG | 2017-05-26 09:24:29 | [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:877) - Returning a Reference to the SessionFactory
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:257) - Session factory constructed with filter configurations : {}
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:258) - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\Ilkka\AppData\Local\Temp\tomcat.6382314255742808598.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_102\lib\resources.jar;C:\Program Files\Java\jre1.8.0_102\lib\rt.jar;C:\Program Files\Java\jre1.8.0_102\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_102\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_102\lib\jce.jar;C:\Program Files\Java\jre1.8.0_102\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_102\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_102\classes, sun.desktop=windows, spring.application.admin.enabled=true, com.sun.management.jmxremote=, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_102-b14, spring.liveBeansView.mbeanDomain=, user.name=Ilkka, javax.persistence.validation.mode=AUTO, user.language=fi, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_102\bin, com.sun.management.jmxremote.port=51710, PID=12200, java.version=1.8.0_102, user.timezone=Europe/Helsinki, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_102\lib\endorsed, java.rmi.server.randomIDs=true, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FI, java.home=C:\Program Files\Java\jre1.8.0_102, java.vm.info=mixed mode, os.version=6.3, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@430df350, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@194d329e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, com.sun.management.jmxremote.ssl=false, path.separator=;, java.vm.version=25.102-b14, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, com.sun.management.jmxremote.authenticate=false, user.script=, user.home=C:\Users\Ilkka, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_102/bin/server;C:/Program Files/Java/jre1.8.0_102/bin;C:/Program Files/Java/jre1.8.0_102/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\PC Connectivity Solution\;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files\Calibre2\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\nodejs\;C:\Users\Ilkka\AppData\Local\Android\sdk\platform-tools;C:\Users\Ilkka\AppData\Local\Android\sdk\tools;C:\apache-ant-1.9.7;D:\sw-tools\PostgreSQL\9.6\bin;D:\sw-tools\PostgreSQL\9.6\lib;C:\Program Files\Java\jdk1.8.0_102\bin;D:\sw-tools\apache-maven-3.3.9\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Ilkka\AppData\Roaming\npm;C:\Users\Ilkka\AppData\Local\Programs\Git\cmd;D:\sts-bundle\sts-3.8.3.RELEASE;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=translateit2.TranslateIt2v4Application --spring.output.ansi.enabled=always, java.class.path=D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\classes;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.2.RELEASE\spring-boot-starter-data-jpa-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.2.RELEASE\spring-boot-starter-aop-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-core\5.0.12.Final\hibernate-core-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\Ilkka\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ilkka\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.12.Final\hibernate-entitymanager-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-jpa\1.11.1.RELEASE\spring-data-jpa-1.11.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-commons\1.13.1.RELEASE\spring-data-commons-1.13.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.24\jcl-over-slf4j-1.7.24.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aspects\4.3.7.RELEASE\spring-aspects-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\1.5.2.RELEASE\spring-boot-starter-data-rest-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.7\jackson-databind-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-webmvc\2.6.1.RELEASE\spring-data-rest-webmvc-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-core\2.6.1.RELEASE\spring-data-rest-core-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\hateoas\spring-hateoas\0.23.0.RELEASE\spring-hateoas-0.23.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\atteo\evo-inflector\1.2.1\evo-inflector-1.2.1.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.2.RELEASE\spring-boot-starter-jdbc-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.2.RELEASE\spring-boot-starter-thymeleaf-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\Ilkka\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\codehaus\groovy\groovy\2.4.9\groovy-2.4.9.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.2.RELEASE\spring-boot-starter-web-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.2.RELEASE\spring-boot-starter-tomcat-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\Ilkka\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar;C:\Users\Ilkka\.m2\repository\org\postgresql\postgresql\9.4.1212.jre7\postgresql-9.4.1212.jre7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\modelmapper\modelmapper\0.7.4\modelmapper-0.7.4.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\1.5.2.RELEASE\spring-boot-configuration-processor-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.8.7\jackson-datatype-jsr310-2.8.7.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.7\jackson-core-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.2.RELEASE\spring-boot-starter-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot\1.5.2.RELEASE\spring-boot-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.2.RELEASE\spring-boot-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-api\1.7.24\slf4j-api-1.7.24.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\Ilkka\AppData\Local\Temp\tomcat.6382314255742808598.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\Ilkka\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jre1.8.0_102\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\sw-tools\STS\translateit2testi\TranslateIT2v4, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1373e3ee, file.encoding=UTF-8, java.specification.version=1.8}
DEBUG | 2017-05-26 09:24:29 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:29 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:29 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:24:29 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:24:29 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:24:29 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:29 | [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
DEBUG | 2017-05-26 09:24:29 | [main] spi.CascadeStyles (CascadeStyles.java:268) - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:24:29 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_work where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select work_.id, work_.backup_file as backup_f2_8_, work_.dead_line as dead_lin3_8_, work_.finished as finished4_8_, work_.group_id as group_i13_8_, work_.locale as locale5_8_, work_.original_file as original6_8_, work_.priority as priority7_8_, work_.progress as progress8_8_, work_.project_id as project14_8_, work_.skeleton_file as skeleton9_8_, work_.started as started10_8_, work_.status as status11_8_, work_.version as version12_8_ from tr_work work_ where work_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_work (backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_work set backup_file=?, dead_line=?, finished=?, group_id=?, locale=?, original_file=?, priority=?, progress=?, project_id=?, skeleton_file=?, started=?, status=?, version=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_work where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d25f816]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f9d394]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d43cc9]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656ec00d]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed25612]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [NONE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ec6960]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b95942]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@667797f]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ea78f0]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6598caab]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ca0ad4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658f08a]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c2f0b4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35dcd032]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64dfb31d]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4438b862]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_NOWAIT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b6ad97]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da57a64]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdf221a]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_SKIPLOCKED]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e27f603]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1736c1e4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32dcfeea]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [FORCE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738a815c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd7b79]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5103eea2]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762405bf]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113eed88]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0677f3]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_WRITE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d99851]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae3235e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b6701e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3686389]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4228f269]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376b5cb2]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775f15fd]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1552da16]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78318ac2]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_info where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select info_.id, info_.text as text2_2_ from tr_info info_ where info_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_info (text, id) values (?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_info set text=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_info where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c75084]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [NONE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75527e36]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d815fb7]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376af784]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_NOWAIT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0114c0]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_SKIPLOCKED]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203765b2]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [FORCE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b47b7f5]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6b5352]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_WRITE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b39e79b]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f86f9cf]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2bd5e6]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_project where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select project_.id, project_.format as format2_5_, project_.info_id as info_id6_5_, project_.name as name3_5_, project_.person_id as person_i7_5_, project_.source_locale as source_l4_5_, project_.type as type5_5_ from tr_project project_ where project_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_project (format, info_id, name, person_id, source_locale, type, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_project set format=?, info_id=?, name=?, person_id=?, source_locale=?, type=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_project where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef1c3f7]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1322b575]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d504137]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [NONE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4ca109]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a17dd6f]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c96eb4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab63a04]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6bba7d]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e8d917]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae5bd34]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a16984c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db1ce78]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_NOWAIT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3ad8e7]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b73e0a]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c6feea]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b57f915]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645dc557]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c5698]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [FORCE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17884d]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c732e1c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aad919c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c42964]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340c5fb6]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b09da]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d389f2]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66298fe9]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c262f2f]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5563bb40]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be80ece]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a01cb]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efb13f1]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5112b7]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56835f2f]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_unit where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select unit_.id, unit_.segment_key as segment_2_7_, unit_.serial_number as serial_n3_7_, unit_.source_plural as source_p4_7_, unit_.source_skeleton_tag as source_s5_7_, unit_.source_text as source_t6_7_, unit_.comment as comment7_7_, unit_.equivalent as equivale8_7_, unit_.history as history9_7_, unit_.note as note10_7_, unit_.target_plural as target_11_7_, unit_.target_skeleton_tag as target_12_7_, unit_.state as state13_7_, unit_.target_text as target_14_7_, unit_.work_id as work_id15_7_ from tr_unit unit_ where unit_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_unit (segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_unit set segment_key=?, serial_number=?, source_plural=?, source_skeleton_tag=?, source_text=?, comment=?, equivalent=?, history=?, note=?, target_plural=?, target_skeleton_tag=?, state=?, target_text=?, work_id=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_unit where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_unit (id, segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1aa95]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e2bc2f4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27afbf14]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c25d0d1]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7845b21a]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2321e482]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fe5bb7]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5f5478]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [NONE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef2b8e5]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5d717f19]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a19a0fe]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d284f15]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2342f1ff]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cec590c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21090c88]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a84bb6]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1999149e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27896d3b]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6f3b13d0]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9a10cd]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea66c33]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@69ba3f4e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@a826ff8]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49889154]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_NOWAIT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c33008f]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30517a57]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@79ad1774]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df77dfa]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_SKIPLOCKED]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721fc2e3]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1ccdc7aa]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1657b017]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44864536]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [FORCE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455f4483]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7996d0d4]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@300bb303]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1c5cf2]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0986c9]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48cf8414]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@15d65fcf]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f59da34]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_WRITE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752973de]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@793cef95]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67c21bf]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f1e22e]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6903ed0e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16ea0f22]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16e195cf]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c7522c]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c23d90]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@49631cfb]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6133e20b]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@612af486]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_comment where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select comment_.id from tr_comment comment_ where comment_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_comment (id) values (?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_comment where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_comment (id) values (null)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d033453]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [NONE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e795a1d]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc41b77]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e93b0e7]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cd562d]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7bc939]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [FORCE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc1a8f6]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2037f12b]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9e8da1]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b94703b]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d290757]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_translatorgroup where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select translator_.id, translator_.name as name2_6_ from tr_translatorgroup translator_ where translator_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_translatorgroup (name, id) values (?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_translatorgroup set name=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_translatorgroup where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab7ac02]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [NONE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fad51a3]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb5508]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac0a14b]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_NOWAIT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e24592e]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_SKIPLOCKED]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ff7063]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [FORCE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb96449]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d28c214]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_WRITE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8c48f3]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cceb281]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619c3546]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_note where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select note_.id from tr_note note_ where note_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_note (id) values (?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_note where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_note (id) values (null)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30cafd13]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [NONE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d944fc0]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b791dca]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af9a5ef]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_NOWAIT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6736f40f]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_SKIPLOCKED]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7548e1fb]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [FORCE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@994544]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0c45f4]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_WRITE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faec277]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1669931a]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e007be]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_person where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select person_.id, person_.full_name as full_nam2_4_ from tr_person person_ where person_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_person (full_name, id) values (?, ?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_person set full_name=? where id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_person where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699e0bf0]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [NONE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36d697ab]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315b4202]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a899811]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_NOWAIT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@171aa66]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_SKIPLOCKED]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2cdc51]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [FORCE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25470477]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e479da]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_WRITE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30dd00b6]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c16677c]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd751de]
DEBUG | 2017-05-26 09:24:29 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.History
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_history where id =?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select history_.id from tr_history history_ where history_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_history (id) values (?)
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:24:29 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_history where id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_history (id) values (null)
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1124910c]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [NONE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9869a8]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f9f60d]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@628ba266]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_NOWAIT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d77746b]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_SKIPLOCKED]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734a149a]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [FORCE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9b92c6]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d20616a]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_WRITE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4d1c7b]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f6d25c]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db791df]
DEBUG | 2017-05-26 09:24:29 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:24:29 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:24:29 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:24:29 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:453) - Instantiated session factory
INFO  | 2017-05-26 09:24:29 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 09:24:29 | [main] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_comment (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_history (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_info (id bigint generated by default as identity, text TEXT, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_note (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_person (id bigint generated by default as identity, full_name varchar(255), primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_project (id bigint generated by default as identity, format varchar(255), name varchar(255), source_locale varchar(255), type varchar(255), info_id bigint, person_id bigint, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_translatorgroup (id bigint generated by default as identity, name varchar(255), primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_unit (id bigint generated by default as identity, segment_key TEXT, serial_number integer not null, source_plural TEXT, source_skeleton_tag varchar(255), source_text TEXT, comment binary(255), equivalent boolean not null, history binary(255), note binary(255), target_plural TEXT, target_skeleton_tag varchar(255), state integer, target_text TEXT, work_id bigint, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_work (id bigint generated by default as identity, backup_file varchar(255), dead_line date, finished date, locale varchar(255), original_file varchar(255), priority varchar(255), progress double not null, skeleton_file varchar(255), started date, status varchar(255), version varchar(255), group_id bigint, project_id bigint, primary key (id))
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK3u6x7qevdwo2qb7ugrv3lqg3w foreign key (info_id) references tr_info
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK9xsn4sv56f3mps0lqcl4kp3w foreign key (person_id) references tr_person
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_unit add constraint FKqt7b0h6ejsl9b1bif7lt2tjnm foreign key (work_id) references tr_work
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FK19uacxh9ai4fqvihvsubfo7od foreign key (group_id) references tr_translatorgroup
DEBUG | 2017-05-26 09:24:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FKm55t7uvhwwxxtusomoeb9en4t foreign key (project_id) references tr_project
INFO  | 2017-05-26 09:24:29 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 09:24:29 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:149) - Checking 0 named HQL queries
DEBUG | 2017-05-26 09:24:29 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:165) - Checking 0 named SQL queries
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4492b393
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1ab4e492-0c72-45e8-8f6c-064966c46489 (<unnamed>)
DEBUG | 2017-05-26 09:24:29 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG | 2017-05-26 09:24:29 | [main] schemagen.JpaSchemaGenerator$GenerationProcess (JpaSchemaGenerator.java:106) - No actions specified; doing nothing
DEBUG | 2017-05-26 09:24:29 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:39) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ecd8ab1
DEBUG | 2017-05-26 09:24:29 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:49) - Registering EntityManagerFactory: default 
DEBUG | 2017-05-26 09:24:29 | [main] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
DEBUG | 2017-05-26 09:24:29 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:29 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:29 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:29 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@19ac93d2
INFO  | 2017-05-26 09:24:30 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} unit0_.id ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 09:24:30 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'unit0_.id as id1_7_' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@11dcd42c}

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select unit0_.id as id1_7_, unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count unit0_.id ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 09:24:30 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@11dcd42c}

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'u'
    |           \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'u'
          |  |  |  \-[IDENT] Node: 'work'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'workId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'u'
             |  |  \-[IDENT] Node: 'target'
             |  \-[IDENT] Node: 'state'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'state'

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : id -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.id -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@11dcd42c
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target -> org.hibernate.type.ComponentType@5e6522a6
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'target.state'
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target -> unit0_.state
DEBUG | 2017-05-26 09:24:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target.state -> org.hibernate.type.CustomType@7d1cdeb1
DEBUG | 2017-05-26 09:24:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target.state -> unit0_.state
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count ( unit0_.id unit0_.id id ) ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( and ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ( = ( unit0_.state ( unit0_.state unit0_.id target ) state ) ? ) ) ) )
DEBUG | 2017-05-26 09:24:30 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:24:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'unit0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
    |  |     +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@11dcd42c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=target.state,path=u.target.state,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=COMPONENT,getPropertyPath=target.state,path=u.target,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
             |  |  \-[IDENT] IdentNode: 'target' {originalText=target}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@7d1cdeb1}

DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 09:24:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=? and unit0_.state=?
DEBUG | 2017-05-26 09:24:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] internal.DefaultMergeEventListener (DefaultMergeEventListener.java:93) - EntityCopyObserver strategy: disallow
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Person#0]
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:24:31 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 09:24:31 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Info#0]
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:24:31 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 09:24:31 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.TranslatorGroup#0]
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:24:31 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 09:24:31 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.TranslatorGroup{name=Group name, id=1}
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'translateit2'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Project'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (x) -> project0_
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} tr_project project0_ ) )
DEBUG | 2017-05-26 09:24:31 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}

DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 09:24:31 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:1515) - Result row: 
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@153409b8, payload=[Ljava.lang.Class;@511bfbb0}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:24:31 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:31 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:31 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:24:31 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:24:31 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:24:31 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:24:31 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:24:31 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:24:31 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:24:31 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:24:31 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:24:31 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:24:31 | [main] criteria.CriteriaQueryImpl (CriteriaQueryImpl.java:307) - Rendered criteria query -> select generatedAlias0 from trProject as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Project'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (generatedAlias0) -> project0_
DEBUG | 2017-05-26 09:24:31 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 09:24:31 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 09:24:31 | [main] tree.DotNode (DotNode.java:661) - getDataType() : name -> org.hibernate.type.StringType@3f1a9a53
DEBUG | 2017-05-26 09:24:31 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0.name -> project0_.name
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} tr_project project0_ ) ( where ( = ( project0_.name project0_.id name ) ? ) ) )
DEBUG | 2017-05-26 09:24:31 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 09:24:31 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_5_' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'project0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=project0_,className=translateit2.persistence.model.Project,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'project0_.id' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@3f1a9a53}

DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:24:31 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 09:24:31 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:24:31 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Person#1
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:24:31 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Info#1
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Project#0]
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:24:31 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:31 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_en, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:24:31 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@1c5d376c, payload=[Ljava.lang.Class;@42f2cae8}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:24:31 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3bbc47c9, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@615e7fe7}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:24:31 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Project#1
DEBUG | 2017-05-26 09:24:31 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:24:31 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:24:31 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-22 -> 2017-05-22
DEBUG | 2017-05-26 09:24:31 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : null -> null
DEBUG | 2017-05-26 09:24:31 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-26 -> 2017-05-26
DEBUG | 2017-05-26 09:24:31 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:24:31 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:24:31 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG | 2017-05-26 09:24:31 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_EN, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:24:31 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Work{originalFile=null, project=translateit2.persistence.model.Project#1, finished=null, started=2017-05-26, locale=fi_fi, priority=HIGH, version=0.07, deadLine=2017-05-22, backupFile=null, skeletonFile=skeleton file, progress=0.0, id=1, group=translateit2.persistence.model.TranslatorGroup#1, status=null}
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] internal.SessionFactoryImpl (SessionFactoryImpl.java:1054) - HHH000031: Closing
INFO  | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
INFO  | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] internal.AbstractServiceRegistryImpl (AbstractServiceRegistryImpl.java:407) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] internal.BootstrapServiceRegistryImpl (BootstrapServiceRegistryImpl.java:286) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 09:24:59 | [RMI TCP Connection(2)-192.168.1.9] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:91) - Remove: name=default
DEBUG | 2017-05-26 09:25:24 | [background-preinit] logging.LoggerFactory (LoggerFactory.java:19) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
INFO  | 2017-05-26 09:25:24 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
DEBUG | 2017-05-26 09:25:24 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:24 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:25:25 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:25:25 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:25 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:25:25 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:25:25 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:25:25 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:25:25 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:25:26 | [main] util.LogHelper (LogHelper.java:102) - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@764c12b6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@439e3cb4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/sw-tools/STS/translateit2testi/TranslateIT2v4/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		translateit2.persistence.model.Comment
		translateit2.persistence.model.History
		translateit2.persistence.model.Info
		translateit2.persistence.model.Note
		translateit2.persistence.model.Person
		translateit2.persistence.model.Project
		translateit2.persistence.model.Source
		translateit2.persistence.model.Target
		translateit2.persistence.model.TranslatorGroup
		translateit2.persistence.model.Unit
		translateit2.persistence.model.Work
		translateit2.util.LocalDateAttributeConverter]
	Mapping files names []
	Properties []
DEBUG | 2017-05-26 09:25:26 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG | 2017-05-26 09:25:26 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG | 2017-05-26 09:25:26 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG | 2017-05-26 09:25:26 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
INFO  | 2017-05-26 09:25:26 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 09:25:26 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 09:25:26 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
DEBUG | 2017-05-26 09:25:26 | [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG | 2017-05-26 09:25:26 | [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:74) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  | 2017-05-26 09:25:26 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@5ff00507
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@5ff00507
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ff00507
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c134052
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@667dcaad
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration yes_no -> org.hibernate.type.YesNoType@19fd43da
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@604d23fa
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@604d23fa
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604d23fa
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration character -> org.hibernate.type.CharacterType@79980d8d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char -> org.hibernate.type.CharacterType@79980d8d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79980d8d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@715a70e9
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@715a70e9
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@715a70e9
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration integer -> org.hibernate.type.IntegerType@4dfe8b37
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration int -> org.hibernate.type.IntegerType@4dfe8b37
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4dfe8b37
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@73894c5a
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@73894c5a
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73894c5a
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@3c232051
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@3c232051
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c232051
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24043ec5
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24043ec5
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ca3d25b
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ca3d25b
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration string -> org.hibernate.type.StringType@7bbfc5ff
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bbfc5ff
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f8d9767
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1980a3f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration url -> org.hibernate.type.UrlType@6f5d0190
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f5d0190
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration date -> org.hibernate.type.DateType@1f9d4b0e
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f9d4b0e
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration time -> org.hibernate.type.TimeType@b5c6a30
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b5c6a30
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2921199d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2921199d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2921199d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59fc6d05
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar -> org.hibernate.type.CalendarType@629a9f26
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@629a9f26
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@629a9f26
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47b269c4
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration locale -> org.hibernate.type.LocaleType@64aeaf29
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@64aeaf29
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration currency -> org.hibernate.type.CurrencyType@6f6efa4f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f6efa4f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3730f716
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3730f716
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration class -> org.hibernate.type.ClassType@e3b0369
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e3b0369
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67e0ff3a
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67e0ff3a
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5af5d76f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration binary -> org.hibernate.type.BinaryType@740b6628
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte[] -> org.hibernate.type.BinaryType@740b6628
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [B -> org.hibernate.type.BinaryType@740b6628
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c241a9f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c241a9f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c241a9f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration row_version -> org.hibernate.type.RowVersionType@337a6d30
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration image -> org.hibernate.type.ImageType@5190010f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration characters -> org.hibernate.type.CharArrayType@5d878b25
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d878b25
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [C -> org.hibernate.type.CharArrayType@5d878b25
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@433d9680
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@433d9680
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@433d9680
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration text -> org.hibernate.type.TextType@261bd7b
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ntext -> org.hibernate.type.NTextType@6002e944
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration blob -> org.hibernate.type.BlobType@422ab737
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@422ab737
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11d86b9d
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration clob -> org.hibernate.type.ClobType@78da899f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78da899f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nclob -> org.hibernate.type.NClobType@648c5fb3
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@648c5fb3
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@151ab2b9
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@590765c4
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration serializable -> org.hibernate.type.SerializableType@125d47c4
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration object -> org.hibernate.type.ObjectType@3e546734
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e546734
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f2276c9
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12d2ddde
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62b475e2
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e9474f
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c61eda5
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1859ffda
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59838256
DEBUG | 2017-05-26 09:25:26 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@131a7516
DEBUG | 2017-05-26 09:25:26 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 09:25:26 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 09:25:26 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
INFO  | 2017-05-26 09:25:26 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 09:25:26 | [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Target]; ignoring
DEBUG | 2017-05-26 09:25:26 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Source]; ignoring
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trWork
DEBUG | 2017-05-26 09:25:26 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Work on table tr_work
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:id]
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=backup_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property backupFile with lazy=false
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:backupFile]
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for backupFile
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property backupFile
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=dead_line, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property deadLine with lazy=false
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for deadLine
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property deadLine
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=finished, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property finished with lazy=false
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for finished
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property finished
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=group, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property group
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property locale with lazy=false
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:locale]
DEBUG | 2017-05-26 09:25:26 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 09:25:26 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for locale
DEBUG | 2017-05-26 09:25:26 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property locale
DEBUG | 2017-05-26 09:25:26 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=original_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property originalFile with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:originalFile]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for originalFile
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property originalFile
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=priority, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property priority with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:priority]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Priority]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for priority
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property priority
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=progress, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property progress with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:progress]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [double]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for progress
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property progress
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=project, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property project
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=skeleton_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonFile with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:skeletonFile]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=started, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property started with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for started
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property started
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property status with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:status]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Status]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for status
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property status
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property version with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:version]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for version
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property version
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trInfo
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Info on table tr_info
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:text]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trProject
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Project on table tr_project
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=format, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property format with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:format]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileFormat]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for format
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property format
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=info, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property info
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:name]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=person, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property person
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=source_locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property sourceLocale with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:sourceLocale]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property type with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:type]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileType]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for type
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property type
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trUnit
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Unit on table tr_unit
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=segment_key, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property segmentKey with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:segmentKey]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=serial_number, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property serialNumber with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:serialNumber]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [int]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:plural]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:skeletonTag]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:text]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property source
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=comment, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property comment with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:comment]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Comment]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for comment
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property comment
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=equivalent, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property equivalent with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:equivalent]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [boolean]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for equivalent
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property equivalent
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=history, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property history with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:history]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [History]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for history
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property history
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=note, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property note with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:note]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Note]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for note
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property note
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:plural]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:skeletonTag]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=state, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property state with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:state]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [State]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for state
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property state
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:text]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property target
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=work, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property work
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trComment
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Comment on table tr_comment
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Comment:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trTranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.TranslatorGroup on table tr_translatorgroup
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:name]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trNote
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Note on table tr_note
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_note), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Note:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trPerson
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Person on table tr_person
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property fullName with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:fullName]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for fullName
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property fullName
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trHistory
DEBUG | 2017-05-26 09:25:27 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.History on table tr_history
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.History:id]
DEBUG | 2017-05-26 09:25:27 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for backupFile
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for deadLine
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 09:25:27 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for finished
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 09:25:27 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for locale
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for originalFile
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for priority
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for progress
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for started
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 09:25:27 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for status
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for version
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for format
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for type
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for comment
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for equivalent
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for history
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for note
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for state
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for fullName
DEBUG | 2017-05-26 09:25:27 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_work]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_info]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_project]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_unit]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_comment]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_translatorgroup]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_note]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_person]
DEBUG | 2017-05-26 09:25:27 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_history]
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:212) - Building session factory
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:73) - Statistics: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e6ec74
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:110) - Connection release mode: ON_CLOSE
DEBUG | 2017-05-26 09:25:27 | [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:877) - Returning a Reference to the SessionFactory
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:257) - Session factory constructed with filter configurations : {}
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:258) - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\Ilkka\AppData\Local\Temp\tomcat.2258110130572722258.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_102\lib\resources.jar;C:\Program Files\Java\jre1.8.0_102\lib\rt.jar;C:\Program Files\Java\jre1.8.0_102\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_102\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_102\lib\jce.jar;C:\Program Files\Java\jre1.8.0_102\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_102\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_102\classes, sun.desktop=windows, spring.application.admin.enabled=true, com.sun.management.jmxremote=, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_102-b14, spring.liveBeansView.mbeanDomain=, user.name=Ilkka, javax.persistence.validation.mode=AUTO, user.language=fi, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_102\bin, com.sun.management.jmxremote.port=51738, PID=3416, java.version=1.8.0_102, user.timezone=Europe/Helsinki, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_102\lib\endorsed, java.rmi.server.randomIDs=true, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FI, java.home=C:\Program Files\Java\jre1.8.0_102, java.vm.info=mixed mode, os.version=6.3, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cb6e0ee, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@439e3cb4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, com.sun.management.jmxremote.ssl=false, path.separator=;, java.vm.version=25.102-b14, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, com.sun.management.jmxremote.authenticate=false, user.script=, user.home=C:\Users\Ilkka, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_102/bin/server;C:/Program Files/Java/jre1.8.0_102/bin;C:/Program Files/Java/jre1.8.0_102/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\PC Connectivity Solution\;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files\Calibre2\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\nodejs\;C:\Users\Ilkka\AppData\Local\Android\sdk\platform-tools;C:\Users\Ilkka\AppData\Local\Android\sdk\tools;C:\apache-ant-1.9.7;D:\sw-tools\PostgreSQL\9.6\bin;D:\sw-tools\PostgreSQL\9.6\lib;C:\Program Files\Java\jdk1.8.0_102\bin;D:\sw-tools\apache-maven-3.3.9\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Ilkka\AppData\Roaming\npm;C:\Users\Ilkka\AppData\Local\Programs\Git\cmd;D:\sts-bundle\sts-3.8.3.RELEASE;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=translateit2.TranslateIt2v4Application --spring.output.ansi.enabled=always, java.class.path=D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\classes;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.2.RELEASE\spring-boot-starter-data-jpa-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.2.RELEASE\spring-boot-starter-aop-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-core\5.0.12.Final\hibernate-core-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\Ilkka\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ilkka\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.12.Final\hibernate-entitymanager-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-jpa\1.11.1.RELEASE\spring-data-jpa-1.11.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-commons\1.13.1.RELEASE\spring-data-commons-1.13.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.24\jcl-over-slf4j-1.7.24.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aspects\4.3.7.RELEASE\spring-aspects-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\1.5.2.RELEASE\spring-boot-starter-data-rest-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.7\jackson-databind-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-webmvc\2.6.1.RELEASE\spring-data-rest-webmvc-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-core\2.6.1.RELEASE\spring-data-rest-core-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\hateoas\spring-hateoas\0.23.0.RELEASE\spring-hateoas-0.23.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\atteo\evo-inflector\1.2.1\evo-inflector-1.2.1.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.2.RELEASE\spring-boot-starter-jdbc-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.2.RELEASE\spring-boot-starter-thymeleaf-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\Ilkka\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\codehaus\groovy\groovy\2.4.9\groovy-2.4.9.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.2.RELEASE\spring-boot-starter-web-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.2.RELEASE\spring-boot-starter-tomcat-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\Ilkka\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar;C:\Users\Ilkka\.m2\repository\org\postgresql\postgresql\9.4.1212.jre7\postgresql-9.4.1212.jre7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\modelmapper\modelmapper\0.7.4\modelmapper-0.7.4.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\1.5.2.RELEASE\spring-boot-configuration-processor-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.8.7\jackson-datatype-jsr310-2.8.7.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.7\jackson-core-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.2.RELEASE\spring-boot-starter-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot\1.5.2.RELEASE\spring-boot-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.2.RELEASE\spring-boot-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-api\1.7.24\slf4j-api-1.7.24.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\Ilkka\AppData\Local\Temp\tomcat.2258110130572722258.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\Ilkka\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jre1.8.0_102\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\sw-tools\STS\translateit2testi\TranslateIT2v4, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7b6141f0, file.encoding=UTF-8, java.specification.version=1.8}
DEBUG | 2017-05-26 09:25:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:27 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:25:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:25:27 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:25:27 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
DEBUG | 2017-05-26 09:25:27 | [main] spi.CascadeStyles (CascadeStyles.java:268) - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 09:25:27 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Work
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_work where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select work_.id, work_.backup_file as backup_f2_8_, work_.dead_line as dead_lin3_8_, work_.finished as finished4_8_, work_.group_id as group_i13_8_, work_.locale as locale5_8_, work_.original_file as original6_8_, work_.priority as priority7_8_, work_.progress as progress8_8_, work_.project_id as project14_8_, work_.skeleton_file as skeleton9_8_, work_.started as started10_8_, work_.status as status11_8_, work_.version as version12_8_ from tr_work work_ where work_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_work (backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_work set backup_file=?, dead_line=?, finished=?, group_id=?, locale=?, original_file=?, priority=?, progress=?, project_id=?, skeleton_file=?, started=?, status=?, version=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_work where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64f32e9e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2262f0d8]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e5c8fb]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e33a6a]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7493d937]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [NONE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ea78f0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6598caab]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ca0ad4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658f08a]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35dcd032]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64dfb31d]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b6ad97]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44fb6ebd]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da57a64]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e27f603]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6136e1fc]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_NOWAIT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1736c1e4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738a815c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2565a7d0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_SKIPLOCKED]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd7b79]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762405bf]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e77678c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [FORCE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113eed88]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d99851]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd7d5e1]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae3235e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3686389]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e2c6d8]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_WRITE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4228f269]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775f15fd]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106cd9c8]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1552da16]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77ce88c4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11abd6c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29b5533]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75839695]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a6a494]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Info
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_info where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select info_.id, info_.text as text2_2_ from tr_info info_ where info_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_info (text, id) values (?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_info set text=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_info where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376af784]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [NONE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0114c0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203765b2]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b47b7f5]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_NOWAIT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6b5352]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_SKIPLOCKED]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b39e79b]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [FORCE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f86f9cf]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2bd5e6]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_WRITE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef1c3f7]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1322b575]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d504137]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Project
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_project where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select project_.id, project_.format as format2_5_, project_.info_id as info_id6_5_, project_.name as name3_5_, project_.person_id as person_i7_5_, project_.source_locale as source_l4_5_, project_.type as type5_5_ from tr_project project_ where project_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_project (format, info_id, name, person_id, source_locale, type, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_project set format=?, info_id=?, name=?, person_id=?, source_locale=?, type=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_project where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4ca109]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a17dd6f]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c96eb4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [NONE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab63a04]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6bba7d]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae5bd34]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a16984c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3ad8e7]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6d1ff3]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b73e0a]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b57f915]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c7fb0b]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_NOWAIT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645dc557]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17884d]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e24e7]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c732e1c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c42964]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211a9647]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [FORCE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340c5fb6]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d389f2]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@308e87a1]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66298fe9]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5563bb40]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11148dc2]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be80ece]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efb13f1]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb4ed71]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5112b7]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1aa95]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c72189f]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14be750c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e08615]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19dac2d6]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_unit where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select unit_.id, unit_.segment_key as segment_2_7_, unit_.serial_number as serial_n3_7_, unit_.source_plural as source_p4_7_, unit_.source_skeleton_tag as source_s5_7_, unit_.source_text as source_t6_7_, unit_.comment as comment7_7_, unit_.equivalent as equivale8_7_, unit_.history as history9_7_, unit_.note as note10_7_, unit_.target_plural as target_11_7_, unit_.target_skeleton_tag as target_12_7_, unit_.state as state13_7_, unit_.target_text as target_14_7_, unit_.work_id as work_id15_7_ from tr_unit unit_ where unit_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_unit (segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_unit set segment_key=?, serial_number=?, source_plural=?, source_skeleton_tag=?, source_text=?, comment=?, equivalent=?, history=?, note=?, target_plural=?, target_skeleton_tag=?, state=?, target_text=?, work_id=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_unit where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_unit (id, segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2bc2f4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f93f4c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2321e482]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fe5bb7]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5f5478]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef2b8e5]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d717f19]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a19a0fe]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [NONE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d284f15]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2342f1ff]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@cec590c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21090c88]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a84bb6]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1999149e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27896d3b]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3b13d0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9a10cd]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@59b447a4]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@579846cc]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f0806b]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49889154]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45d7495e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3dde5f38]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64f3ca6]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_NOWAIT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df77dfa]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@63187d63]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1a536164]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@368424db]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_SKIPLOCKED]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44864536]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e239337]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@fcf9525]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4243341e]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [FORCE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1c5cf2]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1377b1a0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27dbaa33]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b021664]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f59da34]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@52a67293]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@38f502fc]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67afe909]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_WRITE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f1e22e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@e154848]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@60fc7f43]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3212d853]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c7522c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d17914a]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@77b71c9]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ffb2a6]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@612af486]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43deba42]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@38c10190]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7ebe07]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_comment where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select comment_.id from tr_comment comment_ where comment_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_comment (id) values (?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_comment where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_comment (id) values (null)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e93b0e7]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [NONE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cd562d]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7bc939]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc1a8f6]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2037f12b]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9e8da1]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [FORCE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b94703b]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d290757]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab7ac02]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fad51a3]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb5508]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_translatorgroup where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select translator_.id, translator_.name as name2_6_ from tr_translatorgroup translator_ where translator_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_translatorgroup (name, id) values (?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_translatorgroup set name=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_translatorgroup where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac0a14b]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [NONE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e24592e]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ff7063]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb96449]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_NOWAIT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d28c214]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_SKIPLOCKED]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8c48f3]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [FORCE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cceb281]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619c3546]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_WRITE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30cafd13]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d944fc0]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b791dca]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Note
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_note where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select note_.id from tr_note note_ where note_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_note (id) values (?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_note where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_note (id) values (null)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af9a5ef]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [NONE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6736f40f]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7548e1fb]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@994544]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_NOWAIT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0c45f4]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_SKIPLOCKED]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faec277]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [FORCE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1669931a]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e007be]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_WRITE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699e0bf0]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36d697ab]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315b4202]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Person
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_person where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select person_.id, person_.full_name as full_nam2_4_ from tr_person person_ where person_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_person (full_name, id) values (?, ?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_person set full_name=? where id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_person where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a899811]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [NONE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@171aa66]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2cdc51]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25470477]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_NOWAIT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e479da]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_SKIPLOCKED]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30dd00b6]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [FORCE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c16677c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd751de]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_WRITE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1124910c]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9869a8]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f9f60d]
DEBUG | 2017-05-26 09:25:27 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.History
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_history where id =?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select history_.id from tr_history history_ where history_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_history (id) values (?)
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 09:25:27 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_history where id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_history (id) values (null)
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@628ba266]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [NONE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d77746b]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734a149a]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9b92c6]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_NOWAIT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d20616a]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_SKIPLOCKED]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4d1c7b]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [FORCE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f6d25c]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db791df]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_WRITE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1e1f02]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c5f0edc]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e31062c]
DEBUG | 2017-05-26 09:25:27 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 09:25:27 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 09:25:27 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 09:25:27 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:453) - Instantiated session factory
INFO  | 2017-05-26 09:25:27 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 09:25:27 | [main] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_comment (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_history (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_info (id bigint generated by default as identity, text TEXT, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_note (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_person (id bigint generated by default as identity, full_name varchar(255), primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_project (id bigint generated by default as identity, format varchar(255), name varchar(255), source_locale varchar(255), type varchar(255), info_id bigint, person_id bigint, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_translatorgroup (id bigint generated by default as identity, name varchar(255), primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_unit (id bigint generated by default as identity, segment_key TEXT, serial_number integer not null, source_plural TEXT, source_skeleton_tag varchar(255), source_text TEXT, comment binary(255), equivalent boolean not null, history binary(255), note binary(255), target_plural TEXT, target_skeleton_tag varchar(255), state integer, target_text TEXT, work_id bigint, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_work (id bigint generated by default as identity, backup_file varchar(255), dead_line date, finished date, locale varchar(255), original_file varchar(255), priority varchar(255), progress double not null, skeleton_file varchar(255), started date, status varchar(255), version varchar(255), group_id bigint, project_id bigint, primary key (id))
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK3u6x7qevdwo2qb7ugrv3lqg3w foreign key (info_id) references tr_info
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK9xsn4sv56f3mps0lqcl4kp3w foreign key (person_id) references tr_person
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_unit add constraint FKqt7b0h6ejsl9b1bif7lt2tjnm foreign key (work_id) references tr_work
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FK19uacxh9ai4fqvihvsubfo7od foreign key (group_id) references tr_translatorgroup
DEBUG | 2017-05-26 09:25:27 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FKm55t7uvhwwxxtusomoeb9en4t foreign key (project_id) references tr_project
INFO  | 2017-05-26 09:25:27 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 09:25:27 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:149) - Checking 0 named HQL queries
DEBUG | 2017-05-26 09:25:27 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:165) - Checking 0 named SQL queries
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7bfa1eb5
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 708917c6-3180-4137-9240-ce61bfe7c3b4 (<unnamed>)
DEBUG | 2017-05-26 09:25:27 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG | 2017-05-26 09:25:27 | [main] schemagen.JpaSchemaGenerator$GenerationProcess (JpaSchemaGenerator.java:106) - No actions specified; doing nothing
DEBUG | 2017-05-26 09:25:27 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:39) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@7bbdb220
DEBUG | 2017-05-26 09:25:27 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:49) - Registering EntityManagerFactory: default 
DEBUG | 2017-05-26 09:25:28 | [main] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@15371de2
INFO  | 2017-05-26 09:25:28 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} unit0_.id ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 09:25:28 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'unit0_.id as id1_7_' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@5ff6dd3c}

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select unit0_.id as id1_7_, unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count unit0_.id ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 09:25:28 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@5ff6dd3c}

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'u'
    |           \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'u'
          |  |  |  \-[IDENT] Node: 'work'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'workId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'u'
             |  |  \-[IDENT] Node: 'target'
             |  \-[IDENT] Node: 'state'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'state'

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : id -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.id -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@5ff6dd3c
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target -> org.hibernate.type.ComponentType@578b2dec
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'target.state'
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target -> unit0_.state
DEBUG | 2017-05-26 09:25:28 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target.state -> org.hibernate.type.CustomType@66863941
DEBUG | 2017-05-26 09:25:28 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target.state -> unit0_.state
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count ( unit0_.id unit0_.id id ) ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( and ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ( = ( unit0_.state ( unit0_.state unit0_.id target ) state ) ? ) ) ) )
DEBUG | 2017-05-26 09:25:28 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 09:25:28 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'unit0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
    |  |     +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@5ff6dd3c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=target.state,path=u.target.state,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=COMPONENT,getPropertyPath=target.state,path=u.target,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
             |  |  \-[IDENT] IdentNode: 'target' {originalText=target}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@66863941}

DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 09:25:28 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=? and unit0_.state=?
DEBUG | 2017-05-26 09:25:28 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:29 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:29 | [main] internal.DefaultMergeEventListener (DefaultMergeEventListener.java:93) - EntityCopyObserver strategy: disallow
DEBUG | 2017-05-26 09:25:29 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Person#0]
DEBUG | 2017-05-26 09:25:29 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:29 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:25:29 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 09:25:30 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Info#0]
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:25:30 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 09:25:30 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.TranslatorGroup#0]
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:25:30 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 09:25:30 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.TranslatorGroup{name=Group name, id=1}
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'translateit2'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Project'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (x) -> project0_
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} tr_project project0_ ) )
DEBUG | 2017-05-26 09:25:30 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}

DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 09:25:30 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:1515) - Result row: 
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:30 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@23365142, payload=[Ljava.lang.Class;@6549ce71}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:25:30 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:30 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:30 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 09:25:30 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 09:25:30 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 09:25:30 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 09:25:30 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 09:25:30 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 09:25:30 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 09:25:30 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 09:25:30 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 09:25:30 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 09:25:30 | [main] criteria.CriteriaQueryImpl (CriteriaQueryImpl.java:307) - Rendered criteria query -> select generatedAlias0 from trProject as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Project'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (generatedAlias0) -> project0_
DEBUG | 2017-05-26 09:25:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 09:25:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 09:25:30 | [main] tree.DotNode (DotNode.java:661) - getDataType() : name -> org.hibernate.type.StringType@7bbfc5ff
DEBUG | 2017-05-26 09:25:30 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0.name -> project0_.name
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} tr_project project0_ ) ( where ( = ( project0_.name project0_.id name ) ? ) ) )
DEBUG | 2017-05-26 09:25:30 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 09:25:30 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_5_' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'project0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=project0_,className=translateit2.persistence.model.Project,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'project0_.id' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@7bbfc5ff}

DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 09:25:30 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 09:25:30 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:25:30 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Person#1
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:25:30 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Info#1
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Project#0]
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 09:25:30 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:30 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_en, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 09:25:30 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@19677add, payload=[Ljava.lang.Class;@b548f51}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:25:30 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@71f4aeb6, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@56976b8b}, constraintType=GENERIC}.
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 09:25:30 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Project#1
DEBUG | 2017-05-26 09:25:30 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 09:25:30 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 09:25:30 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-22 -> 2017-05-22
DEBUG | 2017-05-26 09:25:30 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : null -> null
DEBUG | 2017-05-26 09:25:30 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-26 -> 2017-05-26
DEBUG | 2017-05-26 09:25:30 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 09:25:30 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 09:25:30 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG | 2017-05-26 09:25:30 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_EN, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 09:25:30 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Work{originalFile=null, project=translateit2.persistence.model.Project#1, finished=null, started=2017-05-26, locale=fi_fi, priority=HIGH, version=0.07, deadLine=2017-05-22, backupFile=null, skeletonFile=skeleton file, progress=0.0, id=1, group=translateit2.persistence.model.TranslatorGroup#1, status=null}
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] internal.SessionFactoryImpl (SessionFactoryImpl.java:1054) - HHH000031: Closing
INFO  | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
INFO  | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] internal.AbstractServiceRegistryImpl (AbstractServiceRegistryImpl.java:407) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] internal.BootstrapServiceRegistryImpl (BootstrapServiceRegistryImpl.java:286) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 09:26:12 | [RMI TCP Connection(2)-192.168.1.9] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:91) - Remove: name=default
DEBUG | 2017-05-26 13:23:12 | [background-preinit] logging.LoggerFactory (LoggerFactory.java:19) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
INFO  | 2017-05-26 13:23:12 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
DEBUG | 2017-05-26 13:23:12 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:12 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:16 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:16 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:16 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:16 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:16 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:16 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:16 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:16 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:16 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:16 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:17 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:17 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:17 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:17 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:17 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:17 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:17 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:17 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:17 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:17 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:17 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:17 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:18 | [main] util.LogHelper (LogHelper.java:102) - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@18b4aac2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2ee4706d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/sw-tools/STS/translateit2testi/TranslateIT2v4/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		translateit2.persistence.model.Comment
		translateit2.persistence.model.History
		translateit2.persistence.model.Info
		translateit2.persistence.model.Note
		translateit2.persistence.model.Person
		translateit2.persistence.model.Project
		translateit2.persistence.model.Source
		translateit2.persistence.model.Target
		translateit2.persistence.model.TranslatorGroup
		translateit2.persistence.model.Unit
		translateit2.persistence.model.Work
		translateit2.util.LocalDateAttributeConverter]
	Mapping files names []
	Properties []
DEBUG | 2017-05-26 13:23:18 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG | 2017-05-26 13:23:18 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG | 2017-05-26 13:23:18 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG | 2017-05-26 13:23:18 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
INFO  | 2017-05-26 13:23:18 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 13:23:18 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 13:23:18 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
DEBUG | 2017-05-26 13:23:18 | [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG | 2017-05-26 13:23:18 | [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:74) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  | 2017-05-26 13:23:18 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@7ea3839e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@7ea3839e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ea3839e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52b32b70
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ecd8ab1
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration yes_no -> org.hibernate.type.YesNoType@145e958f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@30d15e4a
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@30d15e4a
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30d15e4a
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration character -> org.hibernate.type.CharacterType@243c4346
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char -> org.hibernate.type.CharacterType@243c4346
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@243c4346
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@63553e9f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@63553e9f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63553e9f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration integer -> org.hibernate.type.IntegerType@5c839677
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration int -> org.hibernate.type.IntegerType@5c839677
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c839677
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@184de357
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@184de357
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@184de357
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@3e753289
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@3e753289
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e753289
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26d028f7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26d028f7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@42cc420b
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@42cc420b
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration string -> org.hibernate.type.StringType@da34eb0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.String -> org.hibernate.type.StringType@da34eb0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2bfa17b0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@285bf5ac
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration url -> org.hibernate.type.UrlType@141bb6b8
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@141bb6b8
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration date -> org.hibernate.type.DateType@642c72cf
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@642c72cf
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration time -> org.hibernate.type.TimeType@678586f0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@678586f0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timestamp -> org.hibernate.type.TimestampType@4751cd3
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4751cd3
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4751cd3
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6785c9fa
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar -> org.hibernate.type.CalendarType@46c662f2
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46c662f2
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46c662f2
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60652518
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration locale -> org.hibernate.type.LocaleType@40bf0e15
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40bf0e15
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration currency -> org.hibernate.type.CurrencyType@f4f843f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f4f843f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5fde1d64
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5fde1d64
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration class -> org.hibernate.type.ClassType@3bab95ca
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3bab95ca
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@636dbfe7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@636dbfe7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7dd3981e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration binary -> org.hibernate.type.BinaryType@6ace919c
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ace919c
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [B -> org.hibernate.type.BinaryType@6ace919c
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e517c9e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e517c9e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e517c9e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration row_version -> org.hibernate.type.RowVersionType@74cd798f
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration image -> org.hibernate.type.ImageType@502c087e
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration characters -> org.hibernate.type.CharArrayType@7f5e6833
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f5e6833
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [C -> org.hibernate.type.CharArrayType@7f5e6833
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ce2e079
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ce2e079
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ce2e079
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration text -> org.hibernate.type.TextType@131ba005
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ntext -> org.hibernate.type.NTextType@2036f83
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration blob -> org.hibernate.type.BlobType@3dbb3fb7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3dbb3fb7
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7657d90b
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration clob -> org.hibernate.type.ClobType@39374689
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39374689
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nclob -> org.hibernate.type.NClobType@65fc8edc
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fc8edc
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f322610
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@323e026d
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration serializable -> org.hibernate.type.SerializableType@63262071
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration object -> org.hibernate.type.ObjectType@20c3b34b
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20c3b34b
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@491893f8
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f408ab6
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46e388ec
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53f495f0
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5efe5b25
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45707f76
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f0e2bdc
DEBUG | 2017-05-26 13:23:18 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@682266d8
DEBUG | 2017-05-26 13:23:18 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:23:18 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:23:18 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
INFO  | 2017-05-26 13:23:18 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:18 | [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Target]; ignoring
DEBUG | 2017-05-26 13:23:18 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Source]; ignoring
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trWork
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Work on table tr_work
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=backup_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property backupFile with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:backupFile]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for backupFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property backupFile
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=dead_line, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property deadLine with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for deadLine
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property deadLine
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=finished, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property finished with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for finished
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property finished
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=group, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property group
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property locale with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:locale]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for locale
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property locale
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=original_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property originalFile with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:originalFile]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for originalFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property originalFile
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=priority, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property priority with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:priority]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Priority]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for priority
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property priority
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=progress, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property progress with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:progress]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [double]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for progress
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property progress
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=project, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property project
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=skeleton_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonFile with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:skeletonFile]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonFile
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=started, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property started with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for started
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property started
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property status with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:status]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Status]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for status
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property status
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property version with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:version]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for version
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property version
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trInfo
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Info on table tr_info
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:text]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trProject
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Project on table tr_project
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=format, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property format with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:format]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileFormat]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for format
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property format
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=info, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property info
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:name]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=person, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property person
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=source_locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property sourceLocale with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:sourceLocale]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for sourceLocale
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property sourceLocale
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property type with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:type]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileType]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for type
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property type
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trUnit
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Unit on table tr_unit
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=segment_key, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property segmentKey with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:segmentKey]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for segmentKey
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property segmentKey
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=serial_number, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property serialNumber with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:serialNumber]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [int]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for serialNumber
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property serialNumber
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:plural]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:skeletonTag]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:text]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property source
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=comment, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property comment with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:comment]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Comment]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for comment
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property comment
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=equivalent, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property equivalent with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:equivalent]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [boolean]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for equivalent
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property equivalent
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=history, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property history with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:history]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [History]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for history
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property history
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=note, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property note with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:note]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Note]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for note
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property note
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:plural]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:skeletonTag]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=state, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property state with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:state]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [State]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for state
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property state
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:text]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property target
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=work, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property work
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trComment
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Comment on table tr_comment
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Comment:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trTranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.TranslatorGroup on table tr_translatorgroup
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:name]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trNote
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Note on table tr_note
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_note), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Note:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trPerson
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Person on table tr_person
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property fullName with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:fullName]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for fullName
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property fullName
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trHistory
DEBUG | 2017-05-26 13:23:18 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.History on table tr_history
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.History:id]
DEBUG | 2017-05-26 13:23:18 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for backupFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for deadLine
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:18 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for finished
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:18 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for locale
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for originalFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for priority
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for progress
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonFile
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for started
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:18 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for status
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for version
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for format
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for sourceLocale
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for type
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for segmentKey
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for serialNumber
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for comment
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for equivalent
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for history
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for note
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for state
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for fullName
DEBUG | 2017-05-26 13:23:18 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_work]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_info]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_project]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_unit]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_comment]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_translatorgroup]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_note]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_person]
DEBUG | 2017-05-26 13:23:18 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_history]
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:212) - Building session factory
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:73) - Statistics: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@97beeaf
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:110) - Connection release mode: ON_CLOSE
DEBUG | 2017-05-26 13:23:18 | [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
DEBUG | 2017-05-26 13:23:18 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:877) - Returning a Reference to the SessionFactory
DEBUG | 2017-05-26 13:23:18 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:257) - Session factory constructed with filter configurations : {}
DEBUG | 2017-05-26 13:23:18 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:258) - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\Ilkka\AppData\Local\Temp\tomcat.5771537374865928942.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_102\lib\resources.jar;C:\Program Files\Java\jre1.8.0_102\lib\rt.jar;C:\Program Files\Java\jre1.8.0_102\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_102\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_102\lib\jce.jar;C:\Program Files\Java\jre1.8.0_102\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_102\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_102\classes, sun.desktop=windows, spring.application.admin.enabled=true, com.sun.management.jmxremote=, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_102-b14, spring.liveBeansView.mbeanDomain=, user.name=Ilkka, javax.persistence.validation.mode=AUTO, user.language=fi, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_102\bin, com.sun.management.jmxremote.port=52619, PID=8736, java.version=1.8.0_102, user.timezone=Europe/Helsinki, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_102\lib\endorsed, java.rmi.server.randomIDs=true, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FI, java.home=C:\Program Files\Java\jre1.8.0_102, java.vm.info=mixed mode, os.version=6.3, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@23ec63af, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2ee4706d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, com.sun.management.jmxremote.ssl=false, path.separator=;, java.vm.version=25.102-b14, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, com.sun.management.jmxremote.authenticate=false, user.script=, user.home=C:\Users\Ilkka, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_102/bin/server;C:/Program Files/Java/jre1.8.0_102/bin;C:/Program Files/Java/jre1.8.0_102/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\PC Connectivity Solution\;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files\Calibre2\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\nodejs\;C:\Users\Ilkka\AppData\Local\Android\sdk\platform-tools;C:\Users\Ilkka\AppData\Local\Android\sdk\tools;C:\apache-ant-1.9.7;D:\sw-tools\PostgreSQL\9.6\bin;D:\sw-tools\PostgreSQL\9.6\lib;C:\Program Files\Java\jdk1.8.0_102\bin;D:\sw-tools\apache-maven-3.3.9\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Ilkka\AppData\Roaming\npm;C:\Users\Ilkka\AppData\Local\Programs\Git\cmd;D:\sts-bundle\sts-3.8.3.RELEASE;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=translateit2.TranslateIt2v4Application --spring.output.ansi.enabled=always, java.class.path=D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\classes;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.2.RELEASE\spring-boot-starter-data-jpa-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.2.RELEASE\spring-boot-starter-aop-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-core\5.0.12.Final\hibernate-core-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\Ilkka\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ilkka\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.12.Final\hibernate-entitymanager-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-jpa\1.11.1.RELEASE\spring-data-jpa-1.11.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-commons\1.13.1.RELEASE\spring-data-commons-1.13.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.24\jcl-over-slf4j-1.7.24.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aspects\4.3.7.RELEASE\spring-aspects-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\1.5.2.RELEASE\spring-boot-starter-data-rest-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.7\jackson-databind-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-webmvc\2.6.1.RELEASE\spring-data-rest-webmvc-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-core\2.6.1.RELEASE\spring-data-rest-core-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\hateoas\spring-hateoas\0.23.0.RELEASE\spring-hateoas-0.23.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\atteo\evo-inflector\1.2.1\evo-inflector-1.2.1.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.2.RELEASE\spring-boot-starter-jdbc-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.2.RELEASE\spring-boot-starter-thymeleaf-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\Ilkka\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\codehaus\groovy\groovy\2.4.9\groovy-2.4.9.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.2.RELEASE\spring-boot-starter-web-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.2.RELEASE\spring-boot-starter-tomcat-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\Ilkka\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar;C:\Users\Ilkka\.m2\repository\org\postgresql\postgresql\9.4.1212.jre7\postgresql-9.4.1212.jre7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\modelmapper\modelmapper\0.7.4\modelmapper-0.7.4.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\1.5.2.RELEASE\spring-boot-configuration-processor-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.8.7\jackson-datatype-jsr310-2.8.7.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.7\jackson-core-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.2.RELEASE\spring-boot-starter-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot\1.5.2.RELEASE\spring-boot-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.2.RELEASE\spring-boot-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-api\1.7.24\slf4j-api-1.7.24.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\Ilkka\AppData\Local\Temp\tomcat.5771537374865928942.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\Ilkka\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jre1.8.0_102\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\sw-tools\STS\translateit2testi\TranslateIT2v4, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@280d6a20, file.encoding=UTF-8, java.specification.version=1.8}
DEBUG | 2017-05-26 13:23:18 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:18 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:18 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:18 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:18 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:18 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:18 | [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
DEBUG | 2017-05-26 13:23:18 | [main] spi.CascadeStyles (CascadeStyles.java:268) - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:18 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:18 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:18 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_work where id =?
DEBUG | 2017-05-26 13:23:18 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select work_.id, work_.backup_file as backup_f2_8_, work_.dead_line as dead_lin3_8_, work_.finished as finished4_8_, work_.group_id as group_i13_8_, work_.locale as locale5_8_, work_.original_file as original6_8_, work_.priority as priority7_8_, work_.progress as progress8_8_, work_.project_id as project14_8_, work_.skeleton_file as skeleton9_8_, work_.started as started10_8_, work_.status as status11_8_, work_.version as version12_8_ from tr_work work_ where work_.id=?
DEBUG | 2017-05-26 13:23:18 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_work (backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:18 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_work set backup_file=?, dead_line=?, finished=?, group_id=?, locale=?, original_file=?, priority=?, progress=?, project_id=?, skeleton_file=?, started=?, status=?, version=? where id=?
DEBUG | 2017-05-26 13:23:18 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_work where id=?
DEBUG | 2017-05-26 13:23:18 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:18 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5059d398]
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:18 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798b36fd]
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:18 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7305cfb1]
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:23:18 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71687d8f]
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:23:18 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191774d6]
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:18 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:18 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:18 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [NONE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a589eed]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@305289b3]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4037cdb0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e4068]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776d8097]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b787274]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b45ea1]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5a72cd]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f95ac0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c418496]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d35bc9]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_NOWAIT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df32c09]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8656a2]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52035328]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_SKIPLOCKED]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5614ae05]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4c7e51]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749ee0e3]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [FORCE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7891cf3]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349aeec4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3700994c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a165db]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3bb944]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e429f56]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_WRITE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dbeaef8]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f529a6]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d47b021]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6516181f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ead3c67]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2b512b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba87c11]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068cda1]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644e6a8e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_info where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select info_.id, info_.text as text2_2_ from tr_info info_ where info_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_info (text, id) values (?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_info set text=? where id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_info where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aab98b6]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [NONE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bfd4b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa9247b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd25bf5]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_NOWAIT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b30951]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_SKIPLOCKED]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2697c156]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [FORCE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c40ed6]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ee7fdc]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_WRITE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6949cead]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ea0a7a9]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e353dc]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_project where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select project_.id, project_.format as format2_5_, project_.info_id as info_id6_5_, project_.name as name3_5_, project_.person_id as person_i7_5_, project_.source_locale as source_l4_5_, project_.type as type5_5_ from tr_project project_ where project_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_project (format, info_id, name, person_id, source_locale, type, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_project set format=?, info_id=?, name=?, person_id=?, source_locale=?, type=? where id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_project where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@780a91d0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3387ab0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b278b17]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [NONE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4203529f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aaa89c2]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217fd3c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1736273c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36eb8e07]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df6494f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5f960a]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ac8c0c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361f1647]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_NOWAIT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51172948]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@323b0632]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd8831c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146db8a6]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c0437f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b8f818]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [FORCE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e9d721]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2864c3]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ef2906]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f70bce5]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16cb6f51]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc5d397]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c8c71e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7a21d0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb21063]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6821c63c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4790b897]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cba890e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4cb483]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe156f4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b4cff]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_unit where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select unit_.id, unit_.segment_key as segment_2_7_, unit_.serial_number as serial_n3_7_, unit_.source_plural as source_p4_7_, unit_.source_skeleton_tag as source_s5_7_, unit_.source_text as source_t6_7_, unit_.comment as comment7_7_, unit_.equivalent as equivale8_7_, unit_.history as history9_7_, unit_.note as note10_7_, unit_.target_plural as target_11_7_, unit_.target_skeleton_tag as target_12_7_, unit_.state as state13_7_, unit_.target_text as target_14_7_, unit_.work_id as work_id15_7_ from tr_unit unit_ where unit_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_unit (segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_unit set segment_key=?, serial_number=?, source_plural=?, source_skeleton_tag=?, source_text=?, comment=?, equivalent=?, history=?, note=?, target_plural=?, target_skeleton_tag=?, state=?, target_text=?, work_id=? where id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_unit where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_unit (id, segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ac0823]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5d94ac8a]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5f911d24]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ccead]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c4b1a4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b59d58]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5d36c3]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ebfe01a]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [NONE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c00c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d695ec4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@e4ef4c0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b10472e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9746157]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69fd99c1]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180cc0df]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c58320]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e90cec8]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5ee0cf64]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@14c5283]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46748b04]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e71a1f8]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7cbede2b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2d3d4a54]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b19b346]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_NOWAIT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c5b8e8]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3205610d]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e789704]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e45fbd0]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_SKIPLOCKED]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ce19b7]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b240276]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b45ce4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1835b783]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [FORCE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456b140f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1e6bd367]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3601549f]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b9c716f]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6bc75c]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@bea283b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22854f2b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ddf5118]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_WRITE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9d1a4]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7845ee8a]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16c8e9b8]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d6267e]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512dc0e0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@75063bd0]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c60f096]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fc870f]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18f4086e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@538f45f1]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5cf3a7f9]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bd2f039]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_comment where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select comment_.id from tr_comment comment_ where comment_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_comment (id) values (?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_comment where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_comment (id) values (null)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c8ad6d7]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [NONE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e8694b]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c15f76]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1344f7fe]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b10f60e]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5e9949]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [FORCE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e02cc37]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@652a1a17]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186d6033]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69419d59]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96075c0]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_translatorgroup where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select translator_.id, translator_.name as name2_6_ from tr_translatorgroup translator_ where translator_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_translatorgroup (name, id) values (?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_translatorgroup set name=? where id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_translatorgroup where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4679554d]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [NONE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49353d43]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bba9949]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744fb110]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_NOWAIT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7474196]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_SKIPLOCKED]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18209303]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [FORCE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa9a93b]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b9df65]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_WRITE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c43e84e]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ce2e4d]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a239dac]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_note where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select note_.id from tr_note note_ where note_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_note (id) values (?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_note where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_note (id) values (null)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2573b149]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [NONE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3211cc84]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56fa0ef]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ee1c89]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_NOWAIT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52a74328]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_SKIPLOCKED]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220be130]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [FORCE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f4df55e]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f439e0f]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_WRITE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5296f00c]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5487a8f1]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b2ff4df]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_person where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select person_.id, person_.full_name as full_nam2_4_ from tr_person person_ where person_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_person (full_name, id) values (?, ?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_person set full_name=? where id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_person where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af606e9]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [NONE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33765d22]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155c7eae]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d00b469]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_NOWAIT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8fcdf2]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_SKIPLOCKED]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c29b0dc]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [FORCE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd3860]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59cde35]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_WRITE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3eb1ea]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bde9a22]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a03bd5]
DEBUG | 2017-05-26 13:23:19 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_history where id =?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select history_.id from tr_history history_ where history_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_history (id) values (?)
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:19 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_history where id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_history (id) values (null)
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671f545b]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [NONE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c8d8e7]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e66bf2d]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342dc040]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_NOWAIT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@281ca256]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_SKIPLOCKED]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8b37a8]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [FORCE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f2ff80]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a859c5]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_WRITE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e4dd68]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a63ff31]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f36267d]
DEBUG | 2017-05-26 13:23:19 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:19 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:19 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:19 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:19 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:453) - Instantiated session factory
INFO  | 2017-05-26 13:23:19 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 13:23:19 | [main] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_comment (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_history (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_info (id bigint generated by default as identity, text TEXT, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_note (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_person (id bigint generated by default as identity, full_name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_project (id bigint generated by default as identity, format varchar(255), name varchar(255), source_locale varchar(255), type varchar(255), info_id bigint, person_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_translatorgroup (id bigint generated by default as identity, name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_unit (id bigint generated by default as identity, segment_key TEXT, serial_number integer not null, source_plural TEXT, source_skeleton_tag varchar(255), source_text TEXT, comment binary(255), equivalent boolean not null, history binary(255), note binary(255), target_plural TEXT, target_skeleton_tag varchar(255), state integer, target_text TEXT, work_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_work (id bigint generated by default as identity, backup_file varchar(255), dead_line date, finished date, locale varchar(255), original_file varchar(255), priority varchar(255), progress double not null, skeleton_file varchar(255), started date, status varchar(255), version varchar(255), group_id bigint, project_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK3u6x7qevdwo2qb7ugrv3lqg3w foreign key (info_id) references tr_info
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK9xsn4sv56f3mps0lqcl4kp3w foreign key (person_id) references tr_person
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_unit add constraint FKqt7b0h6ejsl9b1bif7lt2tjnm foreign key (work_id) references tr_work
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FK19uacxh9ai4fqvihvsubfo7od foreign key (group_id) references tr_translatorgroup
DEBUG | 2017-05-26 13:23:19 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FKm55t7uvhwwxxtusomoeb9en4t foreign key (project_id) references tr_project
INFO  | 2017-05-26 13:23:19 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 13:23:19 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:149) - Checking 0 named HQL queries
DEBUG | 2017-05-26 13:23:19 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:165) - Checking 0 named SQL queries
DEBUG | 2017-05-26 13:23:19 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e2718b3
DEBUG | 2017-05-26 13:23:19 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1469b507-7364-4ebd-b5ca-bcccbe853f3c (<unnamed>)
DEBUG | 2017-05-26 13:23:19 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG | 2017-05-26 13:23:19 | [main] schemagen.JpaSchemaGenerator$GenerationProcess (JpaSchemaGenerator.java:106) - No actions specified; doing nothing
DEBUG | 2017-05-26 13:23:19 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:39) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5065bdac
DEBUG | 2017-05-26 13:23:19 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:49) - Registering EntityManagerFactory: default 
DEBUG | 2017-05-26 13:23:19 | [main] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
DEBUG | 2017-05-26 13:23:19 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:19 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@632d1b1b
INFO  | 2017-05-26 13:23:20 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} unit0_.id ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:23:20 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'unit0_.id as id1_7_' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@31940704}

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select unit0_.id as id1_7_, unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count unit0_.id ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:23:20 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@31940704}

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'u'
    |           \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'u'
          |  |  |  \-[IDENT] Node: 'work'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'workId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'u'
             |  |  \-[IDENT] Node: 'target'
             |  \-[IDENT] Node: 'state'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'state'

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : id -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.id -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@31940704
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target -> org.hibernate.type.ComponentType@24d73c51
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'target.state'
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target -> unit0_.state
DEBUG | 2017-05-26 13:23:20 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target.state -> org.hibernate.type.CustomType@3b95fce9
DEBUG | 2017-05-26 13:23:20 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target.state -> unit0_.state
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count ( unit0_.id unit0_.id id ) ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( and ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ( = ( unit0_.state ( unit0_.state unit0_.id target ) state ) ? ) ) ) )
DEBUG | 2017-05-26 13:23:20 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:20 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'unit0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
    |  |     +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@31940704}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=target.state,path=u.target.state,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=COMPONENT,getPropertyPath=target.state,path=u.target,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
             |  |  \-[IDENT] IdentNode: 'target' {originalText=target}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@3b95fce9}

DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:23:20 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=? and unit0_.state=?
DEBUG | 2017-05-26 13:23:20 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] internal.DefaultMergeEventListener (DefaultMergeEventListener.java:93) - EntityCopyObserver strategy: disallow
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Person#0]
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:22 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:23:22 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Info#0]
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:22 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:23:22 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.TranslatorGroup#0]
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:22 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:23:22 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.TranslatorGroup{name=Group name, id=1}
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'translateit2'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Project'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (x) -> project0_
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} tr_project project0_ ) )
DEBUG | 2017-05-26 13:23:22 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}

DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:23:22 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:1515) - Result row: 
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3c3357c7, payload=[Ljava.lang.Class;@506d7fed}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:22 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:22 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:22 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:22 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:22 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:22 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:22 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:22 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:22 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:22 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:22 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:22 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:22 | [main] criteria.CriteriaQueryImpl (CriteriaQueryImpl.java:307) - Rendered criteria query -> select generatedAlias0 from trProject as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Project'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (generatedAlias0) -> project0_
DEBUG | 2017-05-26 13:23:22 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:23:22 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:23:22 | [main] tree.DotNode (DotNode.java:661) - getDataType() : name -> org.hibernate.type.StringType@da34eb0
DEBUG | 2017-05-26 13:23:22 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0.name -> project0_.name
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} tr_project project0_ ) ( where ( = ( project0_.name project0_.id name ) ? ) ) )
DEBUG | 2017-05-26 13:23:22 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:23:22 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_5_' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'project0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=project0_,className=translateit2.persistence.model.Project,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'project0_.id' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@da34eb0}

DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:22 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:23:22 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:22 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Person#1
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:22 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Info#1
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Project#0]
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:22 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:22 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_en, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:22 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@31b4c003, payload=[Ljava.lang.Class;@74214ac3}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:22 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@e00c94e, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@b2db8bc}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:22 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Project#1
DEBUG | 2017-05-26 13:23:22 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:22 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:22 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-22 -> 2017-05-22
DEBUG | 2017-05-26 13:23:22 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : null -> null
DEBUG | 2017-05-26 13:23:22 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-26 -> 2017-05-26
DEBUG | 2017-05-26 13:23:22 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:22 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:22 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG | 2017-05-26 13:23:22 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_EN, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:22 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Work{originalFile=null, project=translateit2.persistence.model.Project#1, finished=null, started=2017-05-26, locale=fi_fi, priority=HIGH, version=0.07, deadLine=2017-05-22, backupFile=null, skeletonFile=skeleton file, progress=0.0, id=1, group=translateit2.persistence.model.TranslatorGroup#1, status=null}
DEBUG | 2017-05-26 13:23:49 | [background-preinit] logging.LoggerFactory (LoggerFactory.java:19) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
INFO  | 2017-05-26 13:23:49 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
DEBUG | 2017-05-26 13:23:49 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:49 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:50 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:50 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:50 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:50 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:50 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:50 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:50 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:51 | [main] util.LogHelper (LogHelper.java:102) - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@764c12b6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7e7fe6d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/sw-tools/STS/translateit2testi/TranslateIT2v4/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		translateit2.persistence.model.Comment
		translateit2.persistence.model.History
		translateit2.persistence.model.Info
		translateit2.persistence.model.Note
		translateit2.persistence.model.Person
		translateit2.persistence.model.Project
		translateit2.persistence.model.Source
		translateit2.persistence.model.Target
		translateit2.persistence.model.TranslatorGroup
		translateit2.persistence.model.Unit
		translateit2.persistence.model.Work
		translateit2.util.LocalDateAttributeConverter]
	Mapping files names []
	Properties []
DEBUG | 2017-05-26 13:23:51 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG | 2017-05-26 13:23:51 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG | 2017-05-26 13:23:51 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG | 2017-05-26 13:23:51 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
INFO  | 2017-05-26 13:23:51 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 13:23:51 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 13:23:51 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
DEBUG | 2017-05-26 13:23:51 | [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG | 2017-05-26 13:23:51 | [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:74) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  | 2017-05-26 13:23:51 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@46fb0c33
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@46fb0c33
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46fb0c33
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@603cabc4
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@996a546
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a7df831
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@45117dd
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@45117dd
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45117dd
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration character -> org.hibernate.type.CharacterType@1cc8416a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char -> org.hibernate.type.CharacterType@1cc8416a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1cc8416a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@61ffd148
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@61ffd148
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61ffd148
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration integer -> org.hibernate.type.IntegerType@3bc69ce9
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration int -> org.hibernate.type.IntegerType@3bc69ce9
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bc69ce9
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@21ae657b
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@21ae657b
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21ae657b
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@28157173
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@28157173
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28157173
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4130a648
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4130a648
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e33b52e
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e33b52e
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration string -> org.hibernate.type.StringType@2287395
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.String -> org.hibernate.type.StringType@2287395
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a682d35
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16134476
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration url -> org.hibernate.type.UrlType@67f63d26
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@67f63d26
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration date -> org.hibernate.type.DateType@1e5eb20a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e5eb20a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration time -> org.hibernate.type.TimeType@ac91282
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ac91282
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timestamp -> org.hibernate.type.TimestampType@47829d6d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47829d6d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47829d6d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a1b8a46
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar -> org.hibernate.type.CalendarType@78307a56
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78307a56
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78307a56
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1983b48a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration locale -> org.hibernate.type.LocaleType@71e7adbb
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71e7adbb
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration currency -> org.hibernate.type.CurrencyType@1e3df614
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e3df614
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4451f60c
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4451f60c
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration class -> org.hibernate.type.ClassType@7730ef88
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7730ef88
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15a3b42
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15a3b42
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@373052b5
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration binary -> org.hibernate.type.BinaryType@3a8cea24
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3a8cea24
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [B -> org.hibernate.type.BinaryType@3a8cea24
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@27fe059d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@27fe059d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@27fe059d
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration row_version -> org.hibernate.type.RowVersionType@58fd1214
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration image -> org.hibernate.type.ImageType@2921a36a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration characters -> org.hibernate.type.CharArrayType@673e76b3
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char[] -> org.hibernate.type.CharArrayType@673e76b3
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [C -> org.hibernate.type.CharArrayType@673e76b3
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28279a49
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28279a49
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28279a49
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration text -> org.hibernate.type.TextType@566e142
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ntext -> org.hibernate.type.NTextType@6f9e08d4
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration blob -> org.hibernate.type.BlobType@3b0c3951
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b0c3951
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18b6d3c1
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration clob -> org.hibernate.type.ClobType@1e01b133
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e01b133
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nclob -> org.hibernate.type.NClobType@174721c4
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@174721c4
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4aeb0e2b
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7126e26
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration serializable -> org.hibernate.type.SerializableType@19489b27
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration object -> org.hibernate.type.ObjectType@69cd7630
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69cd7630
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3caafa67
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e546734
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53747c4a
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64b0d1fa
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2276c9
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12d2ddde
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62b475e2
DEBUG | 2017-05-26 13:23:51 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e9474f
DEBUG | 2017-05-26 13:23:51 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:23:51 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:23:51 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
INFO  | 2017-05-26 13:23:51 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:23:51 | [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Target]; ignoring
DEBUG | 2017-05-26 13:23:51 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Source]; ignoring
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trWork
DEBUG | 2017-05-26 13:23:51 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Work on table tr_work
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:id]
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=backup_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property backupFile with lazy=false
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:backupFile]
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for backupFile
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property backupFile
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=dead_line, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property deadLine with lazy=false
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for deadLine
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property deadLine
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=finished, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property finished with lazy=false
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:51 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:51 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for finished
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property finished
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=group, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property group
DEBUG | 2017-05-26 13:23:51 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:51 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property locale with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:locale]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for locale
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property locale
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=original_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property originalFile with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:originalFile]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for originalFile
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property originalFile
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=priority, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property priority with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:priority]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Priority]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for priority
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property priority
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=progress, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property progress with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:progress]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [double]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for progress
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property progress
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=project, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property project
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=skeleton_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonFile with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:skeletonFile]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=started, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property started with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for started
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property started
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property status with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:status]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Status]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for status
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property status
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property version with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:version]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for version
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property version
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trInfo
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Info on table tr_info
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:text]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trProject
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Project on table tr_project
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=format, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property format with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:format]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileFormat]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for format
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property format
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=info, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property info
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:name]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=person, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property person
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=source_locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property sourceLocale with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:sourceLocale]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property type with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:type]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileType]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for type
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property type
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trUnit
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Unit on table tr_unit
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=segment_key, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property segmentKey with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:segmentKey]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=serial_number, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property serialNumber with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:serialNumber]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [int]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:plural]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:skeletonTag]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:text]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property source
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=comment, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property comment with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:comment]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Comment]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for comment
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property comment
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=equivalent, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property equivalent with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:equivalent]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [boolean]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for equivalent
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property equivalent
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=history, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property history with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:history]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [History]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for history
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property history
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=note, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property note with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:note]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Note]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for note
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property note
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:plural]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:skeletonTag]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=state, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property state with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:state]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [State]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for state
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property state
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:text]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property target
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=work, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property work
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trComment
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Comment on table tr_comment
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Comment:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trTranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.TranslatorGroup on table tr_translatorgroup
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:name]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trNote
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Note on table tr_note
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_note), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Note:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trPerson
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Person on table tr_person
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property fullName with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:fullName]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for fullName
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property fullName
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trHistory
DEBUG | 2017-05-26 13:23:52 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.History on table tr_history
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.History:id]
DEBUG | 2017-05-26 13:23:52 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for backupFile
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for deadLine
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:23:52 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for finished
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:23:52 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for locale
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for originalFile
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for priority
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for progress
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for started
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:23:52 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for status
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for version
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for format
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for type
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for comment
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for equivalent
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for history
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for note
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for state
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for fullName
DEBUG | 2017-05-26 13:23:52 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_work]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_info]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_project]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_unit]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_comment]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_translatorgroup]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_note]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_person]
DEBUG | 2017-05-26 13:23:52 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_history]
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:212) - Building session factory
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:73) - Statistics: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@723e3c17
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:110) - Connection release mode: ON_CLOSE
DEBUG | 2017-05-26 13:23:52 | [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:877) - Returning a Reference to the SessionFactory
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:257) - Session factory constructed with filter configurations : {}
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:258) - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\Ilkka\AppData\Local\Temp\tomcat.2962561600775370914.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_102\lib\resources.jar;C:\Program Files\Java\jre1.8.0_102\lib\rt.jar;C:\Program Files\Java\jre1.8.0_102\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_102\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_102\lib\jce.jar;C:\Program Files\Java\jre1.8.0_102\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_102\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_102\classes, sun.desktop=windows, spring.application.admin.enabled=true, com.sun.management.jmxremote=, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_102-b14, spring.liveBeansView.mbeanDomain=, user.name=Ilkka, javax.persistence.validation.mode=AUTO, user.language=fi, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_102\bin, com.sun.management.jmxremote.port=52632, PID=10464, java.version=1.8.0_102, user.timezone=Europe/Helsinki, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_102\lib\endorsed, java.rmi.server.randomIDs=true, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FI, java.home=C:\Program Files\Java\jre1.8.0_102, java.vm.info=mixed mode, os.version=6.3, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@175c5c3a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7e7fe6d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, com.sun.management.jmxremote.ssl=false, path.separator=;, java.vm.version=25.102-b14, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, com.sun.management.jmxremote.authenticate=false, user.script=, user.home=C:\Users\Ilkka, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_102/bin/server;C:/Program Files/Java/jre1.8.0_102/bin;C:/Program Files/Java/jre1.8.0_102/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\PC Connectivity Solution\;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files\Calibre2\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\nodejs\;C:\Users\Ilkka\AppData\Local\Android\sdk\platform-tools;C:\Users\Ilkka\AppData\Local\Android\sdk\tools;C:\apache-ant-1.9.7;D:\sw-tools\PostgreSQL\9.6\bin;D:\sw-tools\PostgreSQL\9.6\lib;C:\Program Files\Java\jdk1.8.0_102\bin;D:\sw-tools\apache-maven-3.3.9\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Ilkka\AppData\Roaming\npm;C:\Users\Ilkka\AppData\Local\Programs\Git\cmd;D:\sts-bundle\sts-3.8.3.RELEASE;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=translateit2.TranslateIt2v4Application --spring.output.ansi.enabled=always, java.class.path=D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\classes;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.2.RELEASE\spring-boot-starter-data-jpa-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.2.RELEASE\spring-boot-starter-aop-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-core\5.0.12.Final\hibernate-core-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\Ilkka\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ilkka\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.12.Final\hibernate-entitymanager-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-jpa\1.11.1.RELEASE\spring-data-jpa-1.11.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-commons\1.13.1.RELEASE\spring-data-commons-1.13.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.24\jcl-over-slf4j-1.7.24.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aspects\4.3.7.RELEASE\spring-aspects-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\1.5.2.RELEASE\spring-boot-starter-data-rest-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.7\jackson-databind-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-webmvc\2.6.1.RELEASE\spring-data-rest-webmvc-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-core\2.6.1.RELEASE\spring-data-rest-core-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\hateoas\spring-hateoas\0.23.0.RELEASE\spring-hateoas-0.23.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\atteo\evo-inflector\1.2.1\evo-inflector-1.2.1.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.2.RELEASE\spring-boot-starter-jdbc-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.2.RELEASE\spring-boot-starter-thymeleaf-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\Ilkka\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\codehaus\groovy\groovy\2.4.9\groovy-2.4.9.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.2.RELEASE\spring-boot-starter-web-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.2.RELEASE\spring-boot-starter-tomcat-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\Ilkka\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar;C:\Users\Ilkka\.m2\repository\org\postgresql\postgresql\9.4.1212.jre7\postgresql-9.4.1212.jre7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\modelmapper\modelmapper\0.7.4\modelmapper-0.7.4.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\1.5.2.RELEASE\spring-boot-configuration-processor-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.8.7\jackson-datatype-jsr310-2.8.7.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.7\jackson-core-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.2.RELEASE\spring-boot-starter-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot\1.5.2.RELEASE\spring-boot-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.2.RELEASE\spring-boot-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-api\1.7.24\slf4j-api-1.7.24.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\Ilkka\AppData\Local\Temp\tomcat.2962561600775370914.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\Ilkka\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jre1.8.0_102\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\sw-tools\STS\translateit2testi\TranslateIT2v4, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@69a5c6be, file.encoding=UTF-8, java.specification.version=1.8}
DEBUG | 2017-05-26 13:23:52 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:52 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:52 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:52 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:52 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:52 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
DEBUG | 2017-05-26 13:23:52 | [main] spi.CascadeStyles (CascadeStyles.java:268) - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:23:52 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_work where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select work_.id, work_.backup_file as backup_f2_8_, work_.dead_line as dead_lin3_8_, work_.finished as finished4_8_, work_.group_id as group_i13_8_, work_.locale as locale5_8_, work_.original_file as original6_8_, work_.priority as priority7_8_, work_.progress as progress8_8_, work_.project_id as project14_8_, work_.skeleton_file as skeleton9_8_, work_.started as started10_8_, work_.status as status11_8_, work_.version as version12_8_ from tr_work work_ where work_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_work (backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_work set backup_file=?, dead_line=?, finished=?, group_id=?, locale=?, original_file=?, priority=?, progress=?, project_id=?, skeleton_file=?, started=?, status=?, version=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_work where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4af081]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a588b5f]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656ec00d]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed25612]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e5c8fb]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [NONE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b95942]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@667797f]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ea78f0]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6598caab]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ca0ad4]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6658f08a]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35dcd032]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4522d793]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64dfb31d]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b6ad97]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44fb6ebd]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_NOWAIT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da57a64]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e27f603]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6136e1fc]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_SKIPLOCKED]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1736c1e4]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738a815c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2565a7d0]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [FORCE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd7b79]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762405bf]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e77678c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113eed88]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d99851]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd7d5e1]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_WRITE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae3235e]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3686389]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e2c6d8]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4228f269]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775f15fd]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106cd9c8]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1552da16]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77ce88c4]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11abd6c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_info where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select info_.id, info_.text as text2_2_ from tr_info info_ where info_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_info (text, id) values (?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_info set text=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_info where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75527e36]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [NONE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d815fb7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376af784]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0114c0]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_NOWAIT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203765b2]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_SKIPLOCKED]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b47b7f5]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [FORCE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6b5352]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b39e79b]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_WRITE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f86f9cf]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2bd5e6]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef1c3f7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_project where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select project_.id, project_.format as format2_5_, project_.info_id as info_id6_5_, project_.name as name3_5_, project_.person_id as person_i7_5_, project_.source_locale as source_l4_5_, project_.type as type5_5_ from tr_project project_ where project_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_project (format, info_id, name, person_id, source_locale, type, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_project set format=?, info_id=?, name=?, person_id=?, source_locale=?, type=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_project where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1322b575]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d504137]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4ca109]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [NONE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a17dd6f]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c96eb4]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab63a04]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6bba7d]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae5bd34]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b3f7704]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a16984c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3ad8e7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6d1ff3]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_NOWAIT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b73e0a]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b57f915]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c7fb0b]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645dc557]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17884d]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e24e7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [FORCE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c732e1c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c42964]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211a9647]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340c5fb6]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d389f2]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@308e87a1]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66298fe9]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5563bb40]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11148dc2]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be80ece]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efb13f1]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb4ed71]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5112b7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1aa95]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c72189f]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_unit where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select unit_.id, unit_.segment_key as segment_2_7_, unit_.serial_number as serial_n3_7_, unit_.source_plural as source_p4_7_, unit_.source_skeleton_tag as source_s5_7_, unit_.source_text as source_t6_7_, unit_.comment as comment7_7_, unit_.equivalent as equivale8_7_, unit_.history as history9_7_, unit_.note as note10_7_, unit_.target_plural as target_11_7_, unit_.target_skeleton_tag as target_12_7_, unit_.state as state13_7_, unit_.target_text as target_14_7_, unit_.work_id as work_id15_7_ from tr_unit unit_ where unit_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_unit (segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_unit set segment_key=?, serial_number=?, source_plural=?, source_skeleton_tag=?, source_text=?, comment=?, equivalent=?, history=?, note=?, target_plural=?, target_skeleton_tag=?, state=?, target_text=?, work_id=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_unit where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_unit (id, segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14be750c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@76af51d6]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c25d0d1]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7845b21a]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2321e482]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fe5bb7]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5f5478]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef2b8e5]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [NONE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d717f19]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a19a0fe]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d284f15]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2342f1ff]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cec590c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21090c88]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a84bb6]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1999149e]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27896d3b]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6f3b13d0]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e9a10cd]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b447a4]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ba3f4e]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@a826ff8]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@49889154]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d7495e]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_NOWAIT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30517a57]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@79ad1774]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3df77dfa]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63187d63]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_SKIPLOCKED]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ccdc7aa]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1657b017]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@44864536]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e239337]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [FORCE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7996d0d4]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@300bb303]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d1c5cf2]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1377b1a0]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48cf8414]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@15d65fcf]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@f59da34]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52a67293]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_WRITE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793cef95]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67c21bf]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@79f1e22e]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e154848]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ea0f22]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16e195cf]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@74c7522c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d17914a]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49631cfb]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6133e20b]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@612af486]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43deba42]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_comment where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select comment_.id from tr_comment comment_ where comment_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_comment (id) values (?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_comment where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_comment (id) values (null)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e795a1d]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [NONE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc41b77]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e93b0e7]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cd562d]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7bc939]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc1a8f6]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [FORCE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2037f12b]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9e8da1]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b94703b]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d290757]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab7ac02]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_translatorgroup where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select translator_.id, translator_.name as name2_6_ from tr_translatorgroup translator_ where translator_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_translatorgroup (name, id) values (?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_translatorgroup set name=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_translatorgroup where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fad51a3]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [NONE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb5508]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac0a14b]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e24592e]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_NOWAIT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ff7063]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_SKIPLOCKED]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb96449]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [FORCE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d28c214]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8c48f3]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_WRITE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cceb281]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619c3546]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30cafd13]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_note where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select note_.id from tr_note note_ where note_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_note (id) values (?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_note where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_note (id) values (null)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d944fc0]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [NONE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b791dca]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af9a5ef]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6736f40f]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_NOWAIT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7548e1fb]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_SKIPLOCKED]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@994544]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [FORCE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0c45f4]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faec277]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_WRITE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1669931a]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e007be]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699e0bf0]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_person where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select person_.id, person_.full_name as full_nam2_4_ from tr_person person_ where person_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_person (full_name, id) values (?, ?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_person set full_name=? where id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_person where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36d697ab]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [NONE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315b4202]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a899811]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@171aa66]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_NOWAIT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2cdc51]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_SKIPLOCKED]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25470477]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [FORCE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e479da]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30dd00b6]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_WRITE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c16677c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd751de]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1124910c]
DEBUG | 2017-05-26 13:23:52 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_history where id =?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select history_.id from tr_history history_ where history_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_history (id) values (?)
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:23:52 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_history where id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_history (id) values (null)
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9869a8]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [NONE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f9f60d]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@628ba266]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d77746b]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_NOWAIT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734a149a]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_SKIPLOCKED]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9b92c6]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [FORCE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d20616a]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4d1c7b]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_WRITE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f6d25c]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db791df]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1e1f02]
DEBUG | 2017-05-26 13:23:52 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:23:52 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:23:52 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:23:52 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:453) - Instantiated session factory
INFO  | 2017-05-26 13:23:52 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 13:23:52 | [main] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_comment (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_history (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_info (id bigint generated by default as identity, text TEXT, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_note (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_person (id bigint generated by default as identity, full_name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_project (id bigint generated by default as identity, format varchar(255), name varchar(255), source_locale varchar(255), type varchar(255), info_id bigint, person_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_translatorgroup (id bigint generated by default as identity, name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_unit (id bigint generated by default as identity, segment_key TEXT, serial_number integer not null, source_plural TEXT, source_skeleton_tag varchar(255), source_text TEXT, comment binary(255), equivalent boolean not null, history binary(255), note binary(255), target_plural TEXT, target_skeleton_tag varchar(255), state integer, target_text TEXT, work_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_work (id bigint generated by default as identity, backup_file varchar(255), dead_line date, finished date, locale varchar(255), original_file varchar(255), priority varchar(255), progress double not null, skeleton_file varchar(255), started date, status varchar(255), version varchar(255), group_id bigint, project_id bigint, primary key (id))
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK3u6x7qevdwo2qb7ugrv3lqg3w foreign key (info_id) references tr_info
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK9xsn4sv56f3mps0lqcl4kp3w foreign key (person_id) references tr_person
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_unit add constraint FKqt7b0h6ejsl9b1bif7lt2tjnm foreign key (work_id) references tr_work
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FK19uacxh9ai4fqvihvsubfo7od foreign key (group_id) references tr_translatorgroup
DEBUG | 2017-05-26 13:23:52 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FKm55t7uvhwwxxtusomoeb9en4t foreign key (project_id) references tr_project
INFO  | 2017-05-26 13:23:52 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 13:23:52 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:149) - Checking 0 named HQL queries
DEBUG | 2017-05-26 13:23:52 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:165) - Checking 0 named SQL queries
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@63a7781
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 925e44d4-8345-424d-8ca8-990c525c7035 (<unnamed>)
DEBUG | 2017-05-26 13:23:52 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG | 2017-05-26 13:23:52 | [main] schemagen.JpaSchemaGenerator$GenerationProcess (JpaSchemaGenerator.java:106) - No actions specified; doing nothing
DEBUG | 2017-05-26 13:23:52 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:39) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@52909a97
DEBUG | 2017-05-26 13:23:52 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:49) - Registering EntityManagerFactory: default 
DEBUG | 2017-05-26 13:23:53 | [main] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1a0ffb9b
INFO  | 2017-05-26 13:23:53 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} unit0_.id ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:23:53 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'unit0_.id as id1_7_' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@4c302f38}

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select unit0_.id as id1_7_, unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count unit0_.id ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:23:53 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@4c302f38}

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'u'
    |           \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'u'
          |  |  |  \-[IDENT] Node: 'work'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'workId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'u'
             |  |  \-[IDENT] Node: 'target'
             |  \-[IDENT] Node: 'state'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'state'

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : id -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.id -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@4c302f38
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target -> org.hibernate.type.ComponentType@3a3316b6
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'target.state'
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target -> unit0_.state
DEBUG | 2017-05-26 13:23:53 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target.state -> org.hibernate.type.CustomType@4db46344
DEBUG | 2017-05-26 13:23:53 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target.state -> unit0_.state
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count ( unit0_.id unit0_.id id ) ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( and ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ( = ( unit0_.state ( unit0_.state unit0_.id target ) state ) ? ) ) ) )
DEBUG | 2017-05-26 13:23:53 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:23:53 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'unit0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
    |  |     +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@4c302f38}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=target.state,path=u.target.state,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=COMPONENT,getPropertyPath=target.state,path=u.target,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
             |  |  \-[IDENT] IdentNode: 'target' {originalText=target}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@4db46344}

DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:23:53 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=? and unit0_.state=?
DEBUG | 2017-05-26 13:23:53 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:54 | [main] internal.DefaultMergeEventListener (DefaultMergeEventListener.java:93) - EntityCopyObserver strategy: disallow
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Person#0]
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:54 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:23:54 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:54 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Info#0]
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:54 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:23:54 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:54 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.TranslatorGroup#0]
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:54 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:23:54 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:54 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:23:54 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:54 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.TranslatorGroup{name=Group name, id=1}
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:54 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:23:54 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'translateit2'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Project'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

DEBUG | 2017-05-26 13:23:54 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:54 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:54 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (x) -> project0_
DEBUG | 2017-05-26 13:23:54 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:54 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} tr_project project0_ ) )
DEBUG | 2017-05-26 13:23:54 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:23:54 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:54 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}

DEBUG | 2017-05-26 13:23:54 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:54 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:23:54 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:23:54 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:54 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:23:54 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
DEBUG | 2017-05-26 13:23:54 | [main] loader.Loader (Loader.java:1515) - Result row: 
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:54 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:54 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@79ee779c, payload=[Ljava.lang.Class;@126a9a77}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:55 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:55 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:55 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:23:55 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:23:55 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:23:55 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:23:55 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy67
DEBUG | 2017-05-26 13:23:55 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:23:55 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:23:55 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:23:55 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:23:55 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:23:55 | [main] criteria.CriteriaQueryImpl (CriteriaQueryImpl.java:307) - Rendered criteria query -> select generatedAlias0 from trProject as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:55 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:55 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Project'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG | 2017-05-26 13:23:55 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:55 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:23:55 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (generatedAlias0) -> project0_
DEBUG | 2017-05-26 13:23:55 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:23:55 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:23:55 | [main] tree.DotNode (DotNode.java:661) - getDataType() : name -> org.hibernate.type.StringType@2287395
DEBUG | 2017-05-26 13:23:55 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0.name -> project0_.name
DEBUG | 2017-05-26 13:23:55 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:23:55 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} tr_project project0_ ) ( where ( = ( project0_.name project0_.id name ) ? ) ) )
DEBUG | 2017-05-26 13:23:55 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:23:55 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:23:55 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_5_' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'project0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=project0_,className=translateit2.persistence.model.Project,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'project0_.id' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@2287395}

DEBUG | 2017-05-26 13:23:55 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:55 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:23:55 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:23:55 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:55 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:55 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Person#1
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:55 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:55 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Info#1
DEBUG | 2017-05-26 13:23:55 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Project#0]
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:23:55 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:23:55 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:55 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:55 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_en, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:23:55 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:23:55 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3bbc47c9, payload=[Ljava.lang.Class;@615e7fe7}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:55 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@144dc2f7, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@403cff1c}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:23:55 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:55 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Project#1
DEBUG | 2017-05-26 13:23:55 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:23:55 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:23:55 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-22 -> 2017-05-22
DEBUG | 2017-05-26 13:23:55 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : null -> null
DEBUG | 2017-05-26 13:23:55 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-26 -> 2017-05-26
DEBUG | 2017-05-26 13:23:55 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:23:55 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:23:55 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG | 2017-05-26 13:23:55 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_EN, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:23:55 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Work{originalFile=null, project=translateit2.persistence.model.Project#1, finished=null, started=2017-05-26, locale=fi_fi, priority=HIGH, version=0.07, deadLine=2017-05-22, backupFile=null, skeletonFile=skeleton file, progress=0.0, id=1, group=translateit2.persistence.model.TranslatorGroup#1, status=null}
DEBUG | 2017-05-26 13:25:01 | [background-preinit] logging.LoggerFactory (LoggerFactory.java:19) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
INFO  | 2017-05-26 13:25:01 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
DEBUG | 2017-05-26 13:25:01 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:01 | [background-preinit] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy90
DEBUG | 2017-05-26 13:25:02 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:25:02 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:02 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:25:02 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy90
DEBUG | 2017-05-26 13:25:02 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:25:02 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:25:02 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:25:03 | [main] util.LogHelper (LogHelper.java:102) - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@4e50df2e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@656f62dc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/sw-tools/STS/translateit2testi/TranslateIT2v4/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		translateit2.persistence.model.Comment
		translateit2.persistence.model.History
		translateit2.persistence.model.Info
		translateit2.persistence.model.Note
		translateit2.persistence.model.Person
		translateit2.persistence.model.Project
		translateit2.persistence.model.Source
		translateit2.persistence.model.Target
		translateit2.persistence.model.TranslatorGroup
		translateit2.persistence.model.Unit
		translateit2.persistence.model.Work
		translateit2.util.LocalDateAttributeConverter]
	Mapping files names []
	Properties []
DEBUG | 2017-05-26 13:25:03 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG | 2017-05-26 13:25:03 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG | 2017-05-26 13:25:03 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG | 2017-05-26 13:25:03 | [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
INFO  | 2017-05-26 13:25:03 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 13:25:03 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 13:25:03 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
DEBUG | 2017-05-26 13:25:03 | [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG | 2017-05-26 13:25:03 | [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:74) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  | 2017-05-26 13:25:03 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@1859ffda
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration boolean -> org.hibernate.type.BooleanType@1859ffda
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1859ffda
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12219f6a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bc6da03
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration yes_no -> org.hibernate.type.YesNoType@411cd156
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@5382184b
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte -> org.hibernate.type.ByteType@5382184b
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5382184b
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration character -> org.hibernate.type.CharacterType@42ea7565
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char -> org.hibernate.type.CharacterType@42ea7565
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42ea7565
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@37a0ec3c
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration short -> org.hibernate.type.ShortType@37a0ec3c
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37a0ec3c
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration integer -> org.hibernate.type.IntegerType@44286963
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration int -> org.hibernate.type.IntegerType@44286963
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44286963
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration long -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@5a08b084
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration float -> org.hibernate.type.FloatType@5a08b084
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a08b084
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@552cede7
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration double -> org.hibernate.type.DoubleType@552cede7
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@552cede7
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@29079032
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@29079032
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2efd2f21
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2efd2f21
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration string -> org.hibernate.type.StringType@6661d8c0
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.String -> org.hibernate.type.StringType@6661d8c0
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b2dd3df
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dafae61
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration url -> org.hibernate.type.UrlType@1f66d8e1
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f66d8e1
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration date -> org.hibernate.type.DateType@1f782c05
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f782c05
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration time -> org.hibernate.type.TimeType@22da2fe6
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22da2fe6
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6367a688
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6367a688
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6367a688
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35bfa1bb
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar -> org.hibernate.type.CalendarType@4ea17147
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ea17147
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ea17147
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@309dcdf3
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration locale -> org.hibernate.type.LocaleType@2c0c4c0a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c0c4c0a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration currency -> org.hibernate.type.CurrencyType@66e21568
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66e21568
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35dece42
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35dece42
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration class -> org.hibernate.type.ClassType@52ca2652
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52ca2652
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@114a5e0
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@114a5e0
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f2b90fc
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration binary -> org.hibernate.type.BinaryType@251c4280
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration byte[] -> org.hibernate.type.BinaryType@251c4280
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [B -> org.hibernate.type.BinaryType@251c4280
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@420a8042
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@420a8042
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@420a8042
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration row_version -> org.hibernate.type.RowVersionType@3dce6dd8
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration image -> org.hibernate.type.ImageType@3a7c678b
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration characters -> org.hibernate.type.CharArrayType@322204dc
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration char[] -> org.hibernate.type.CharArrayType@322204dc
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [C -> org.hibernate.type.CharArrayType@322204dc
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61191222
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61191222
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61191222
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration text -> org.hibernate.type.TextType@2519026b
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration ntext -> org.hibernate.type.NTextType@27dc627a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration blob -> org.hibernate.type.BlobType@1d4f5506
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d4f5506
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6e02721d
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration clob -> org.hibernate.type.ClobType@515b9d4a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@515b9d4a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration nclob -> org.hibernate.type.NClobType@3cc053
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3cc053
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@198536f6
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ce03e86
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration serializable -> org.hibernate.type.SerializableType@51d0ec6f
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration object -> org.hibernate.type.ObjectType@52f6900a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52f6900a
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cc01c7f
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a50b32d
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36c7cbe1
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ac6dd3d
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@562919fe
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@794f11cd
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@715f45c6
DEBUG | 2017-05-26 13:25:03 | [main] type.BasicTypeRegistry (BasicTypeRegistry.java:136) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d5c41e5
DEBUG | 2017-05-26 13:25:03 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:25:03 | [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
DEBUG | 2017-05-26 13:25:03 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
INFO  | 2017-05-26 13:25:03 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG | 2017-05-26 13:25:03 | [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Source]; ignoring
DEBUG | 2017-05-26 13:25:03 | [main] annotations.AnnotationMetadataSourceProcessorImpl (AnnotationMetadataSourceProcessorImpl.java:124) - Encountered a non-categorized annotated class [translateit2.persistence.model.Target]; ignoring
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trComment
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Comment on table tr_comment
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Comment:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trHistory
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.History on table tr_history
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.History:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trInfo
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Info on table tr_info
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_info), mappingColumn=text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Info:text]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trNote
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Note on table tr_note
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_note), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Note:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trPerson
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Person on table tr_person
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_person), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property fullName with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Person:fullName]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for fullName
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property fullName
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trProject
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Project on table tr_project
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=format, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property format with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:format]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileFormat]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for format
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property format
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=info, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property info
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:name]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=person, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property person
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=source_locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property sourceLocale with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:sourceLocale]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for sourceLocale
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property sourceLocale
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_project), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property type with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Project:type]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LngFileType]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for type
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property type
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trTranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.TranslatorGroup on table tr_translatorgroup
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_translatorgroup), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property name with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.TranslatorGroup:name]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for name
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property name
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trUnit
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Unit on table tr_unit
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=segment_key, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property segmentKey with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:segmentKey]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for segmentKey
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property segmentKey
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=serial_number, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property serialNumber with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit:serialNumber]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [int]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for serialNumber
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property serialNumber
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:plural]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:skeletonTag]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=source_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.source:text]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property source
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=comment, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property comment with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:comment]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Comment]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for comment
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property comment
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=equivalent, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property equivalent with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:equivalent]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [boolean]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for equivalent
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property equivalent
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=history, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property history with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:history]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [History]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for history
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property history
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=note, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property note with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:note]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Note]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for note
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property note
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property plural
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_plural, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property plural with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:plural]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for plural
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property plural
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_skeleton_tag, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonTag with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:skeletonTag]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=state, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property state with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:state]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [State]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for state
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property state
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:512) - Column(s) overridden for property text
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=target_text, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property text with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Unit.target:text]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property target
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_unit), mappingColumn=work, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property work
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AnnotationBinder (AnnotationBinder.java:509) - Binding entity from annotated class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:409) - Import with entity name trWork
DEBUG | 2017-05-26 13:25:03 | [main] annotations.EntityBinder (EntityBinder.java:685) - Bind entity translateit2.persistence.model.Work on table tr_work
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property id with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:id]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Long]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property id
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=backup_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property backupFile with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:backupFile]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for backupFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property backupFile
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=dead_line, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property deadLine with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for deadLine
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property deadLine
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=finished, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property finished with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for finished
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property finished
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=group, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property group
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=locale, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property locale with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:locale]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Locale]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for locale
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property locale
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=original_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property originalFile with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:originalFile]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for originalFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property originalFile
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=priority, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property priority with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:priority]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Priority]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for priority
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property priority
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=progress, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property progress with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:progress]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [double]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for progress
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property progress
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=project, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property project
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=skeleton_file, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property skeletonFile with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:skeletonFile]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for skeletonFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property skeletonFile
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=started, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property started with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [LocalDate]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:312) - Starting applyAttributeConverter [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for started
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property started
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property status with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:status]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [Status]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for status
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property status
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tr_work), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:169) - MetadataSourceProcessor property version with lazy=false
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:90) - Attempting to locate auto-apply AttributeConverter for property [translateit2.persistence.model.Work:version]
DEBUG | 2017-05-26 13:25:03 | [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:97) - Checking auto-apply AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] type [LocalDate] for match [String]
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:395) - building SimpleValue for version
DEBUG | 2017-05-26 13:25:03 | [main] annotations.PropertyBinder (PropertyBinder.java:260) - Building property version
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for fullName
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for format
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for sourceLocale
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for type
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for name
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for segmentKey
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for serialNumber
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for comment
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for equivalent
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for history
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for note
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for plural
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonTag
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for state
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for text
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for id
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for backupFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for deadLine
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:deadLine]
DEBUG | 2017-05-26 13:25:03 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for finished
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:finished]
DEBUG | 2017-05-26 13:25:03 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for locale
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for originalFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for priority
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for progress
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for skeletonFile
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for started
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:450) - Applying JPA AttributeConverter [org.hibernate.cfg.AttributeConverterDefinition[converterClass=translateit2.util.LocalDateAttributeConverter, domainType=java.time.LocalDate, jdbcType=java.sql.Date]] to [translateit2.persistence.model.Work:started]
DEBUG | 2017-05-26 13:25:03 | [main] converter.AttributeConverterTypeAdapter (AttributeConverterTypeAdapter.java:59) - Created AttributeConverterTypeAdapter -> converted::translateit2.util.LocalDateAttributeConverter
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for status
DEBUG | 2017-05-26 13:25:03 | [main] annotations.SimpleValueBinder (SimpleValueBinder.java:437) - Starting fillSimpleValue for version
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_comment]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_history]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_info]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_note]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_person]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_project]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_translatorgroup]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_unit]
DEBUG | 2017-05-26 13:25:03 | [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [tr_work]
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] internal.InFlightMetadataCollectorImpl (InFlightMetadataCollectorImpl.java:1832) - Resolving reference to class: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:212) - Building session factory
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:73) - Statistics: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@37775bb1
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:110) - Connection release mode: ON_CLOSE
DEBUG | 2017-05-26 13:25:03 | [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
DEBUG | 2017-05-26 13:25:03 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:877) - Returning a Reference to the SessionFactory
DEBUG | 2017-05-26 13:25:03 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:257) - Session factory constructed with filter configurations : {}
DEBUG | 2017-05-26 13:25:03 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:258) - Instantiating session factory with properties: {hibernate.id.new_generator_mappings=false, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.102-b14, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_102\bin, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25ce435, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FI, sun.java.launcher=SUN_STANDARD, PID=13668, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\sw-tools\STS\translateit2testi\TranslateIT2v4, java.runtime.version=1.8.0_102-b14, javax.persistence.sharedCache.mode=UNSPECIFIED, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_102\lib\endorsed, java.io.tmpdir=C:\Users\Ilkka\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@656f62dc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, java.library.path=C:\Program Files\Java\jre1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_102/bin/server;C:/Program Files/Java/jre1.8.0_102/bin;C:/Program Files/Java/jre1.8.0_102/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\PC Connectivity Solution\;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files\Calibre2\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\nodejs\;C:\Users\Ilkka\AppData\Local\Android\sdk\platform-tools;C:\Users\Ilkka\AppData\Local\Android\sdk\tools;C:\apache-ant-1.9.7;D:\sw-tools\PostgreSQL\9.6\bin;D:\sw-tools\PostgreSQL\9.6\lib;C:\Program Files\Java\jdk1.8.0_102\bin;D:\sw-tools\apache-maven-3.3.9\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Ilkka\AppData\Roaming\npm;C:\Users\Ilkka\AppData\Local\Programs\Git\cmd;D:\sts-bundle\sts-3.8.3.RELEASE;;., spring.beaninfo.ignore=true, java.class.version=52.0, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7ea71fc2, os.version=6.3, user.home=C:\Users\Ilkka, user.timezone=Europe/Helsinki, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, user.name=Ilkka, java.class.path=D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\test-classes;D:\sw-tools\STS\translateit2testi\TranslateIT2v4\target\classes;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.2.RELEASE\spring-boot-starter-data-jpa-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.2.RELEASE\spring-boot-starter-aop-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-core\5.0.12.Final\hibernate-core-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\Ilkka\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ilkka\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Ilkka\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.12.Final\hibernate-entitymanager-5.0.12.Final.jar;C:\Users\Ilkka\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-jpa\1.11.1.RELEASE\spring-data-jpa-1.11.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-commons\1.13.1.RELEASE\spring-data-commons-1.13.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.24\jcl-over-slf4j-1.7.24.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-aspects\4.3.7.RELEASE\spring-aspects-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\1.5.2.RELEASE\spring-boot-starter-data-rest-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.7\jackson-databind-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-webmvc\2.6.1.RELEASE\spring-data-rest-webmvc-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\data\spring-data-rest-core\2.6.1.RELEASE\spring-data-rest-core-2.6.1.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\hateoas\spring-hateoas\0.23.0.RELEASE\spring-hateoas-0.23.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\atteo\evo-inflector\1.2.1\evo-inflector-1.2.1.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.2.RELEASE\spring-boot-starter-jdbc-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.2.RELEASE\spring-boot-starter-thymeleaf-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\Ilkka\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\Ilkka\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\Ilkka\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\codehaus\groovy\groovy\2.4.9\groovy-2.4.9.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.2.RELEASE\spring-boot-starter-web-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.2.RELEASE\spring-boot-starter-tomcat-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\Ilkka\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\Ilkka\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar;C:\Users\Ilkka\.m2\repository\org\postgresql\postgresql\9.4.1212.jre7\postgresql-9.4.1212.jre7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter-test\1.5.2.RELEASE\spring-boot-starter-test-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-test\1.5.2.RELEASE\spring-boot-test-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\1.5.2.RELEASE\spring-boot-test-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\jayway\jsonpath\json-path\2.2.0\json-path-2.2.0.jar;C:\Users\Ilkka\.m2\repository\net\minidev\json-smart\2.2.1\json-smart-2.2.1.jar;C:\Users\Ilkka\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\Ilkka\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\Ilkka\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Ilkka\.m2\repository\org\assertj\assertj-core\2.6.0\assertj-core-2.6.0.jar;C:\Users\Ilkka\.m2\repository\org\mockito\mockito-core\1.10.19\mockito-core-1.10.19.jar;C:\Users\Ilkka\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\Ilkka\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Ilkka\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\Ilkka\.m2\repository\org\skyscreamer\jsonassert\1.4.0\jsonassert-1.4.0.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\spring-test\4.3.7.RELEASE\spring-test-4.3.7.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\modelmapper\modelmapper\0.7.4\modelmapper-0.7.4.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\1.5.2.RELEASE\spring-boot-configuration-processor-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.8.7\jackson-datatype-jsr310-2.8.7.jar;C:\Users\Ilkka\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.7\jackson-core-2.8.7.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.2.RELEASE\spring-boot-starter-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot\1.5.2.RELEASE\spring-boot-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.2.RELEASE\spring-boot-autoconfigure-1.5.2.RELEASE.jar;C:\Users\Ilkka\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;C:\Users\Ilkka\.m2\repository\org\slf4j\slf4j-api\1.7.24\slf4j-api-1.7.24.jar;D:\sw-tools\STS\translateit2testi\TranslateIT2v4\src\main\resources;/D:/sts-bundle/sts-3.8.3.RELEASE/configuration/org.eclipse.osgi/301/0/.cp/;/D:/sts-bundle/sts-3.8.3.RELEASE/configuration/org.eclipse.osgi/300/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 52641 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames translateit2.LogTest, java.home=C:\Program Files\Java\jre1.8.0_102, hibernate.dialect=org.hibernate.dialect.H2Dialect, user.language=fi, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_102, java.ext.dirs=C:\Program Files\Java\jre1.8.0_102\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_102\lib\resources.jar;C:\Program Files\Java\jre1.8.0_102\lib\rt.jar;C:\Program Files\Java\jre1.8.0_102\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_102\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_102\lib\jce.jar;C:\Program Files\Java\jre1.8.0_102\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_102\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_102\classes, java.vendor=Oracle Corporation, java.awt.headless=true, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
DEBUG | 2017-05-26 13:25:03 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:03 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:03 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:25:03 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:25:03 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:25:03 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:03 | [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
DEBUG | 2017-05-26 13:25:03 | [main] spi.CascadeStyles (CascadeStyles.java:268) - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Work] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Info] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Project] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Unit] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Comment] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.TranslatorGroup] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Note] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.Person] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [translateit2.persistence.model.History] is safe
DEBUG | 2017-05-26 13:25:03 | [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:03 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Work
DEBUG | 2017-05-26 13:25:03 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_work where id =?
DEBUG | 2017-05-26 13:25:03 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select work_.id, work_.backup_file as backup_f2_8_, work_.dead_line as dead_lin3_8_, work_.finished as finished4_8_, work_.group_id as group_i13_8_, work_.locale as locale5_8_, work_.original_file as original6_8_, work_.priority as priority7_8_, work_.progress as progress8_8_, work_.project_id as project14_8_, work_.skeleton_file as skeleton9_8_, work_.started as started10_8_, work_.status as status11_8_, work_.version as version12_8_ from tr_work work_ where work_.id=?
DEBUG | 2017-05-26 13:25:03 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_work (backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:03 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_work set backup_file=?, dead_line=?, finished=?, group_id=?, locale=?, original_file=?, priority=?, progress=?, project_id=?, skeleton_file=?, started=?, status=?, version=? where id=?
DEBUG | 2017-05-26 13:25:03 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_work where id=?
DEBUG | 2017-05-26 13:25:03 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1999149e]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7996d0d4]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b021664]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752973de]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793cef95]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:03 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:03 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:03 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:25:03 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [NONE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e479da]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30dd00b6]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group.name
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c16677c]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.format
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd751de]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.info.text
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.name
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person
DEBUG | 2017-05-26 13:25:03 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1124910c]
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.person.fullName
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.sourceLocale
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project.type
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:03 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Work.project.info)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.TranslatorGroup)
                - SQL table alias mapping - translator1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_5_2_}
                - JOIN (JoinDefinedByMetadata(info)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Info)
                      - SQL table alias mapping - info3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.Person)
                      - SQL table alias mapping - person4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_, translator1_.id as id1_6_1_, translator1_.name as name2_6_1_, project2_.id as id1_5_2_, project2_.format as format2_5_2_, project2_.info_id as info_id6_5_2_, project2_.name as name3_5_2_, project2_.person_id as person_i7_5_2_, project2_.source_locale as source_l4_5_2_, project2_.type as type5_5_2_, info3_.id as id1_2_3_, info3_.text as text2_2_3_, person4_.id as id1_4_4_, person4_.full_name as full_nam2_4_4_ from tr_work work0_ left outer join tr_translatorgroup translator1_ on work0_.group_id=translator1_.id left outer join tr_project project2_ on work0_.project_id=project2_.id left outer join tr_info info3_ on project2_.info_id=info3_.id left outer join tr_person person4_ on project2_.person_id=person4_.id where work0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9869a8]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f9f60d]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bd7439d]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@628ba266]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d77746b]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ced17f3]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_NOWAIT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734a149a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9b92c6]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eed46e9]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [UPGRADE_SKIPLOCKED]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d20616a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4d1c7b]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7893c715]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [FORCE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f6d25c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db791df]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bfa5a13]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_READ]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1e1f02]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c5f0edc]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@153cfd86]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_WRITE]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e31062c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d522180]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ff03361]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [PESSIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790654d5]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3321291a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc46f24]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76af34b5]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c0d0bd]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@176333ee]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Work)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Work)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Work.group)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Work.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Work)
          - SQL table alias mapping - work0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Work [OPTIMISTIC_FORCE_INCREMENT]: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Work: select work0_.id as id1_8_0_, work0_.backup_file as backup_f2_8_0_, work0_.dead_line as dead_lin3_8_0_, work0_.finished as finished4_8_0_, work0_.group_id as group_i13_8_0_, work0_.locale as locale5_8_0_, work0_.original_file as original6_8_0_, work0_.priority as priority7_8_0_, work0_.progress as progress8_8_0_, work0_.project_id as project14_8_0_, work0_.skeleton_file as skeleton9_8_0_, work0_.started as started10_8_0_, work0_.status as status11_8_0_, work0_.version as version12_8_0_ from tr_work work0_ where work0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Info
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_info where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select info_.id, info_.text as text2_2_ from tr_info info_ where info_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_info (text, id) values (?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_info set text=? where id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_info where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a85515]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [NONE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dfe92ef]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2def55]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eeb29c0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_NOWAIT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f986501]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [UPGRADE_SKIPLOCKED]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ca1242]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [FORCE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78288f83]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_READ]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5beb6be2]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_WRITE]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1182d1df]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [PESSIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31f31b20]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b544732]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : text
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Info)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Info)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Info)
          - SQL table alias mapping - info0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Info [OPTIMISTIC_FORCE_INCREMENT]: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Info: select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Project
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_project where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select project_.id, project_.format as format2_5_, project_.info_id as info_id6_5_, project_.name as name3_5_, project_.person_id as person_i7_5_, project_.source_locale as source_l4_5_, project_.type as type5_5_ from tr_project project_ where project_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_project (format, info_id, name, person_id, source_locale, type, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_project set format=?, info_id=?, name=?, person_id=?, source_locale=?, type=? where id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_project where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d8b7ea9]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333d44f6]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c3e363]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [NONE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8659d0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4bd341]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d28cdcd]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person.fullName
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(info)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=translateit2.persistence.model.Info)
                - SQL table alias mapping - info1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=translateit2.persistence.model.Person)
                - SQL table alias mapping - person2_
                - alias suffix - 2_
                - suffixed key columns - {id1_4_2_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406ad6d5]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1186374c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc5460]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5486ee92]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e62fb]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205159dc]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_NOWAIT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c0c13a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67941d]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ad2b274]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fde6f05]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4def42c3]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72110818]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [FORCE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eabe718]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9b8129]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7530090a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_READ]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4492b393]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a7781]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73b74615]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22686ddb]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bfa1eb5]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b46831]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5353dd09]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192b472d]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84f51d9]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b96e4c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b691611]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@395a573c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : type
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Project)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Project)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Project.info)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Project: select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Unit
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_unit where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select unit_.id, unit_.segment_key as segment_2_7_, unit_.serial_number as serial_n3_7_, unit_.source_plural as source_p4_7_, unit_.source_skeleton_tag as source_s5_7_, unit_.source_text as source_t6_7_, unit_.comment as comment7_7_, unit_.equivalent as equivale8_7_, unit_.history as history9_7_, unit_.note as note10_7_, unit_.target_plural as target_11_7_, unit_.target_skeleton_tag as target_12_7_, unit_.state as state13_7_, unit_.target_text as target_14_7_, unit_.work_id as work_id15_7_ from tr_unit unit_ where unit_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_unit (segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_unit set segment_key=?, serial_number=?, source_plural=?, source_skeleton_tag=?, source_text=?, comment=?, equivalent=?, history=?, note=?, target_plural=?, target_skeleton_tag=?, state=?, target_text=?, work_id=? where id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_unit where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_unit (id, segment_key, serial_number, source_plural, source_skeleton_tag, source_text, comment, equivalent, history, note, target_plural, target_skeleton_tag, state, target_text, work_id) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379f9555]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@cdbe995]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4fe2dd02]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5817f1ca]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726a8729]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd91ffc]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ad847f8]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6927f0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [NONE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@266da047]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d84418a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ec5f944]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74eec640]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.backupFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.deadLine
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.finished
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18dd7767]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.group.name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.locale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.originalFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.priority
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.progress
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfe47a8]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.format
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8ab9de]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.info.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.name
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7bb00e]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.person.fullName
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.sourceLocale
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.project.type
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.skeletonFile
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.started
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.status
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work.version
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:4>, path=translateit2.persistence.model.Unit.work.group)
             - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Project, querySpaceUid=<gen:5>, path=translateit2.persistence.model.Unit.work.project)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Info, querySpaceUid=<gen:6>, path=translateit2.persistence.model.Unit.work.project.info)
                - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:7>, path=translateit2.persistence.model.Unit.work.project.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(work)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=translateit2.persistence.model.Work)
                - SQL table alias mapping - work1_
                - alias suffix - 1_
                - suffixed key columns - {id1_8_1_}
                - JOIN (JoinDefinedByMetadata(group)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=translateit2.persistence.model.TranslatorGroup)
                      - SQL table alias mapping - translator2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=translateit2.persistence.model.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_5_3_}
                      - JOIN (JoinDefinedByMetadata(info)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=translateit2.persistence.model.Info)
                            - SQL table alias mapping - info4_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=translateit2.persistence.model.Person)
                            - SQL table alias mapping - person5_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_4_5_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_, work1_.id as id1_8_1_, work1_.backup_file as backup_f2_8_1_, work1_.dead_line as dead_lin3_8_1_, work1_.finished as finished4_8_1_, work1_.group_id as group_i13_8_1_, work1_.locale as locale5_8_1_, work1_.original_file as original6_8_1_, work1_.priority as priority7_8_1_, work1_.progress as progress8_8_1_, work1_.project_id as project14_8_1_, work1_.skeleton_file as skeleton9_8_1_, work1_.started as started10_8_1_, work1_.status as status11_8_1_, work1_.version as version12_8_1_, translator2_.id as id1_6_2_, translator2_.name as name2_6_2_, project3_.id as id1_5_3_, project3_.format as format2_5_3_, project3_.info_id as info_id6_5_3_, project3_.name as name3_5_3_, project3_.person_id as person_i7_5_3_, project3_.source_locale as source_l4_5_3_, project3_.type as type5_5_3_, info4_.id as id1_2_4_, info4_.text as text2_2_4_, person5_.id as id1_4_5_, person5_.full_name as full_nam2_4_5_ from tr_unit unit0_ left outer join tr_work work1_ on unit0_.work_id=work1_.id left outer join tr_translatorgroup translator2_ on work1_.group_id=translator2_.id left outer join tr_project project3_ on work1_.project_id=project3_.id left outer join tr_info info4_ on project3_.info_id=info4_.id left outer join tr_person person5_ on project3_.person_id=person5_.id where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d22ddd]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b3518e1]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a88f6fb]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@844e66d]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b665a30]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@75ed7512]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@33ebe4f0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29147c12]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_NOWAIT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f45bc8e]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7ab33ca8]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@21e484b]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2a7492]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [UPGRADE_SKIPLOCKED]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6326c5ec]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@709d86a2]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ce655b9]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5731caaf]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [FORCE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59933644]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3e8b8f0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1a345298]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c318864]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_READ]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d61468c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b98225c]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3c488b34]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3866c96e]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_WRITE]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241fc278]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5aab5b31]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@eded048]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655621fd]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [PESSIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e9dca8]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e4d0a0b]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23f5008a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62108cd3]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd1ec54]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : segmentKey
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : serialNumber
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d420cdd]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : source.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@78128dd0]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.comment
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.equivalent
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.history
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.note
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.plural
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.skeletonTag
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.state
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : target.text
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : work
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28dd81ad]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Unit)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Unit, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Unit)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Source, querySpaceUid=<gen:1>, path=translateit2.persistence.model.Unit.source)
          - CompositeAttributeFetchImpl(composite=translateit2.persistence.model.Target, querySpaceUid=<gen:2>, path=translateit2.persistence.model.Unit.target)
          - EntityAttributeFetchImpl(entity=translateit2.persistence.model.Work, querySpaceUid=<gen:3>, path=translateit2.persistence.model.Unit.work)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Unit)
          - SQL table alias mapping - unit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(source)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - unit0_
          - JOIN (JoinDefinedByMetadata(target)) : <gen:0> -> <gen:2>
             - CompositeQuerySpaceImpl(uid=<gen:2>)
                - SQL table alias mapping - unit0_

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Unit [OPTIMISTIC_FORCE_INCREMENT]: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Unit: select unit0_.id as id1_7_0_, unit0_.segment_key as segment_2_7_0_, unit0_.serial_number as serial_n3_7_0_, unit0_.source_plural as source_p4_7_0_, unit0_.source_skeleton_tag as source_s5_7_0_, unit0_.source_text as source_t6_7_0_, unit0_.comment as comment7_7_0_, unit0_.equivalent as equivale8_7_0_, unit0_.history as history9_7_0_, unit0_.note as note10_7_0_, unit0_.target_plural as target_11_7_0_, unit0_.target_skeleton_tag as target_12_7_0_, unit0_.state as state13_7_0_, unit0_.target_text as target_14_7_0_, unit0_.work_id as work_id15_7_0_ from tr_unit unit0_ where unit0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Comment
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_comment where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select comment_.id from tr_comment comment_ where comment_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_comment (id) values (?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_comment where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_comment (id) values (null)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@300a38e7]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [NONE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb0e277]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e881e46]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cea921a]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc16fe2]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78545d40]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [FORCE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@144a5e6e]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de3206d]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b936b04]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5635bcd2]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c27e700]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Comment)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Comment, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Comment: select comment0_.id as id1_0_0_ from tr_comment comment0_ where comment0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.TranslatorGroup
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_translatorgroup where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select translator_.id, translator_.name as name2_6_ from tr_translatorgroup translator_ where translator_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_translatorgroup (name, id) values (?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_translatorgroup set name=? where id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_translatorgroup where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d913116]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [NONE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41582899]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de5871d]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4948daec]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_NOWAIT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1209a0f]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [UPGRADE_SKIPLOCKED]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66715ca9]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [FORCE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@520a95ff]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_READ]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c573229]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_WRITE]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714f1a44]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [PESSIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@592a1882]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a23470]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : name
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.TranslatorGroup)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.TranslatorGroup, querySpaceUid=<gen:0>, path=translateit2.persistence.model.TranslatorGroup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.TranslatorGroup)
          - SQL table alias mapping - translator0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.TranslatorGroup [OPTIMISTIC_FORCE_INCREMENT]: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.TranslatorGroup: select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Note
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_note where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select note_.id from tr_note note_ where note_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_note (id) values (?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_note where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_note (id) values (null)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a7eca5]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [NONE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156cfa20]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23396fc0]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5e6573]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_NOWAIT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58aa5c94]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [UPGRADE_SKIPLOCKED]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50df37eb]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [FORCE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41143873]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_READ]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8bc0696]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_WRITE]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@270f28cf]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [PESSIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@467af68c]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6f77d7]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Note)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Note, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Note)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Note [OPTIMISTIC_FORCE_INCREMENT]: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Note: select note0_.id as id1_3_0_ from tr_note note0_ where note0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.Person
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_person where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select person_.id, person_.full_name as full_nam2_4_ from tr_person person_ where person_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_person (full_name, id) values (?, ?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update tr_person set full_name=? where id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_person where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b97416]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [NONE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c76d6e]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7956f93a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bb74e1]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_NOWAIT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3cd732]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [UPGRADE_SKIPLOCKED]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab8589a]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [FORCE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a92af]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_READ]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b76858]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_WRITE]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30eedaa4]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f6b57f2]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b32b70]
DEBUG | 2017-05-26 13:25:04 | [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : fullName
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.Person)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.Person, querySpaceUid=<gen:0>, path=translateit2.persistence.model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.Person: select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3544) - Static SQL for entity: translateit2.persistence.model.History
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3549) -  Version select: select id from tr_history where id =?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3552) -  Snapshot select: select history_.id from tr_history history_ where history_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into tr_history (id) values (?)
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: null
DEBUG | 2017-05-26 13:25:04 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from tr_history where id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3560) -  Identity insert: insert into tr_history (id) values (null)
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3930fe]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [NONE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f2a43f]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382faf51]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699d96bc]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_NOWAIT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ecd8ab1]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [UPGRADE_SKIPLOCKED]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52909a97]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [FORCE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145e958f]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_READ]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbdb220]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_WRITE]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d120d7c]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [PESSIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=? for update
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485deee1]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a96593]
DEBUG | 2017-05-26 13:25:04 | [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
DEBUG | 2017-05-26 13:25:04 | [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:100) - processing queryspace <gen:0>
DEBUG | 2017-05-26 13:25:04 | [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=translateit2.persistence.model.History)
    - Returns
       - EntityReturnImpl(entity=translateit2.persistence.model.History, querySpaceUid=<gen:0>, path=translateit2.persistence.model.History)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=translateit2.persistence.model.History)
          - SQL table alias mapping - history0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG | 2017-05-26 13:25:04 | [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity translateit2.persistence.model.History [OPTIMISTIC_FORCE_INCREMENT]: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity translateit2.persistence.model.History: select history0_.id as id1_1_0_ from tr_history history0_ where history0_.id=?
DEBUG | 2017-05-26 13:25:04 | [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:453) - Instantiated session factory
INFO  | 2017-05-26 13:25:04 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 13:25:04 | [main] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_comment (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_history (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_info (id bigint generated by default as identity, text TEXT, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_note (id bigint generated by default as identity, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_person (id bigint generated by default as identity, full_name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_project (id bigint generated by default as identity, format varchar(255), name varchar(255), source_locale varchar(255), type varchar(255), info_id bigint, person_id bigint, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_translatorgroup (id bigint generated by default as identity, name varchar(255), primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_unit (id bigint generated by default as identity, segment_key TEXT, serial_number integer not null, source_plural TEXT, source_skeleton_tag varchar(255), source_text TEXT, comment binary(255), equivalent boolean not null, history binary(255), note binary(255), target_plural TEXT, target_skeleton_tag varchar(255), state integer, target_text TEXT, work_id bigint, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - create table tr_work (id bigint generated by default as identity, backup_file varchar(255), dead_line date, finished date, locale varchar(255), original_file varchar(255), priority varchar(255), progress double not null, skeleton_file varchar(255), started date, status varchar(255), version varchar(255), group_id bigint, project_id bigint, primary key (id))
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK3u6x7qevdwo2qb7ugrv3lqg3w foreign key (info_id) references tr_info
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_project add constraint FK9xsn4sv56f3mps0lqcl4kp3w foreign key (person_id) references tr_person
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_unit add constraint FKqt7b0h6ejsl9b1bif7lt2tjnm foreign key (work_id) references tr_work
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FK19uacxh9ai4fqvihvsubfo7od foreign key (group_id) references tr_translatorgroup
DEBUG | 2017-05-26 13:25:04 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - alter table tr_work add constraint FKm55t7uvhwwxxtusomoeb9en4t foreign key (project_id) references tr_project
INFO  | 2017-05-26 13:25:04 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 13:25:04 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:149) - Checking 0 named HQL queries
DEBUG | 2017-05-26 13:25:04 | [main] internal.NamedQueryRepository (NamedQueryRepository.java:165) - Checking 0 named SQL queries
DEBUG | 2017-05-26 13:25:04 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f60cbf2
DEBUG | 2017-05-26 13:25:04 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: efa236a7-2369-4a87-b85b-4048572df04e (<unnamed>)
DEBUG | 2017-05-26 13:25:04 | [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG | 2017-05-26 13:25:04 | [main] schemagen.JpaSchemaGenerator$GenerationProcess (JpaSchemaGenerator.java:106) - No actions specified; doing nothing
DEBUG | 2017-05-26 13:25:04 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:39) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@915d7c4
DEBUG | 2017-05-26 13:25:04 | [main] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:49) - Registering EntityManagerFactory: default 
DEBUG | 2017-05-26 13:25:04 | [main] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a6dffdb
INFO  | 2017-05-26 13:25:04 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} unit0_.id ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:25:04 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'unit0_.id as id1_7_' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@8f40022}

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select u from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select unit0_.id as id1_7_, unit0_.segment_key as segment_2_7_, unit0_.serial_number as serial_n3_7_, unit0_.source_plural as source_p4_7_, unit0_.source_skeleton_tag as source_s5_7_, unit0_.source_text as source_t6_7_, unit0_.comment as comment7_7_, unit0_.equivalent as equivale8_7_, unit0_.history as history9_7_, unit0_.note as note10_7_, unit0_.target_plural as target_11_7_, unit0_.target_skeleton_tag as target_12_7_, unit0_.state as state13_7_, unit0_.target_text as target_14_7_, unit0_.work_id as work_id15_7_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'work'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'workId'

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count unit0_.id ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ) )
DEBUG | 2017-05-26 13:25:04 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@8f40022}

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u) from translateit2.persistence.model.Unit u where u.work.id = :workId
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=?
DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] spi.AbstractEntityManagerImpl (AbstractEntityManagerImpl.java:1494) - Mark transaction for rollback
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Unit'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'u'
    |           \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'u'
          |  |  |  \-[IDENT] Node: 'work'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'workId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'u'
             |  |  \-[IDENT] Node: 'target'
             |  \-[IDENT] Node: 'state'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'state'

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Unit (u) -> unit0_
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : id -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.id -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work -> org.hibernate.type.ManyToOneType(translateit2.persistence.model.Work)
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:620) - dereferenceShortcut() : property id in translateit2.persistence.model.Unit does not require a join.
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'work.id'
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : work.id -> org.hibernate.type.LongType@8f40022
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.work.id -> unit0_.work_id
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u -> unit0_.id
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target -> org.hibernate.type.ComponentType@54496c2d
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:645) - Unresolved property path is now 'target.state'
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target -> unit0_.state
DEBUG | 2017-05-26 13:25:04 | [main] tree.DotNode (DotNode.java:661) - getDataType() : target.state -> org.hibernate.type.CustomType@4e1a3d5a
DEBUG | 2017-05-26 13:25:04 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : u.target.state -> unit0_.state
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count ( unit0_.id unit0_.id id ) ) ) ( FromClause{level=1} tr_unit unit0_ ) ( where ( and ( = ( unit0_.work_id ( unit0_.work_id unit0_.id work ) id ) ? ) ( = ( unit0_.state ( unit0_.state unit0_.id target ) state ) ? ) ) ) )
DEBUG | 2017-05-26 13:25:04 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_unit unit0_]
DEBUG | 2017-05-26 13:25:04 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_unit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'unit0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
    |  |     +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[unit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_unit unit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=tr_unit,tableAlias=unit0_,origin=null,columns={,className=translateit2.persistence.model.Unit}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=work.id,path=u.work.id,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  +-[DOT] DotNode: 'unit0_.work_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=work.id,path=u.work,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
          |  |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
          |  |  |  \-[IDENT] IdentNode: 'work' {originalText=work}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=workId, expectedType=org.hibernate.type.LongType@8f40022}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=target.state,path=u.target.state,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  +-[DOT] DotNode: 'unit0_.state' {propertyName=state,dereferenceType=COMPONENT,getPropertyPath=target.state,path=u.target,tableAlias=unit0_,className=translateit2.persistence.model.Unit,classAlias=u}
             |  |  +-[ALIAS_REF] IdentNode: 'unit0_.id' {alias=u, className=translateit2.persistence.model.Unit, tableAlias=unit0_}
             |  |  \-[IDENT] IdentNode: 'target' {originalText=target}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@4e1a3d5a}

DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(u.id) from translateit2.persistence.model.Unit u where u.work.id = :workId and u.target.state = :state
DEBUG | 2017-05-26 13:25:04 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(unit0_.id) as col_0_0_ from tr_unit unit0_ where unit0_.work_id=? and unit0_.state=?
DEBUG | 2017-05-26 13:25:04 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] internal.DefaultMergeEventListener (DefaultMergeEventListener.java:93) - EntityCopyObserver strategy: disallow
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Person#0]
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:25:06 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_person (id, full_name) values (null, ?)
DEBUG | 2017-05-26 13:25:06 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Info#0]
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:25:06 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_info (id, text) values (null, ?)
DEBUG | 2017-05-26 13:25:06 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.TranslatorGroup#0]
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select translator0_.id as id1_6_0_, translator0_.name as name2_6_0_ from tr_translatorgroup translator0_ where translator0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:25:06 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_translatorgroup (id, name) values (null, ?)
DEBUG | 2017-05-26 13:25:06 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.TranslatorGroup{name=Group name, id=1}
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'translateit2'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Project'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (x) -> project0_
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} tr_project project0_ ) )
DEBUG | 2017-05-26 13:25:06 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}

DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select count(*) from translateit2.persistence.model.Project x
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select count(*) as col_0_0_ from tr_project project0_
DEBUG | 2017-05-26 13:25:06 | [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:1515) - Result row: 
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@66d61298, payload=[Ljava.lang.Class;@7b9fea11}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:25:06 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:06 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:06 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:103) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG | 2017-05-26 13:25:06 | [main] resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:114) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG | 2017-05-26 13:25:06 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:163) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
DEBUG | 2017-05-26 13:25:06 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:185) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
DEBUG | 2017-05-26 13:25:06 | [main] engine.ConfigurationImpl (ConfigurationImpl.java:199) - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy90
DEBUG | 2017-05-26 13:25:06 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:91) - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG | 2017-05-26 13:25:06 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:47) - Trying to load META-INF/validation.xml via user class loader
DEBUG | 2017-05-26 13:25:06 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:54) - Trying to load META-INF/validation.xml via TCCL
DEBUG | 2017-05-26 13:25:06 | [main] xml.ResourceLoaderHelper (ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
DEBUG | 2017-05-26 13:25:06 | [main] xml.ValidationXmlParser (ValidationXmlParser.java:98) - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG | 2017-05-26 13:25:06 | [main] criteria.CriteriaQueryImpl (CriteriaQueryImpl.java:307) - Rendered criteria query -> select generatedAlias0 from trProject as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:278) - parse() - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:296) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'translateit2'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Project'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] tree.FromElement (FromElement.java:146) - FromClause{level=1} : translateit2.persistence.model.Project (generatedAlias0) -> project0_
DEBUG | 2017-05-26 13:25:06 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:25:06 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0 -> project0_.id
DEBUG | 2017-05-26 13:25:06 | [main] tree.DotNode (DotNode.java:661) - getDataType() : name -> org.hibernate.type.StringType@6661d8c0
DEBUG | 2017-05-26 13:25:06 | [main] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : generatedAlias0.name -> project0_.name
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] ast.HqlSqlWalker (HqlSqlWalker.java:654) - processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} tr_project project0_ ) ( where ( = ( project0_.name project0_.id name ) ? ) ) )
DEBUG | 2017-05-26 13:25:06 | [main] util.JoinProcessor (JoinProcessor.java:171) - Using FROM fragment [tr_project project0_]
DEBUG | 2017-05-26 13:25:06 | [main] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:265) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tr_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_5_' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[project0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tr_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=tr_project,tableAlias=project0_,origin=null,columns={,className=translateit2.persistence.model.Project}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'project0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=project0_,className=translateit2.persistence.model.Project,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'project0_.id' {alias=generatedAlias0, className=translateit2.persistence.model.Project, tableAlias=project0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@6661d8c0}

DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:247) - HQL: select generatedAlias0 from translateit2.persistence.model.Project as generatedAlias0 where generatedAlias0.name=:name
DEBUG | 2017-05-26 13:25:06 | [main] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:248) - SQL: select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:25:06 | [main] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_, project0_.format as format2_5_, project0_.info_id as info_id6_5_, project0_.name as name3_5_, project0_.person_id as person_i7_5_, project0_.source_locale as source_l4_5_, project0_.type as type5_5_ from tr_project project0_ where project0_.name=?
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select person0_.id as id1_4_0_, person0_.full_name as full_nam2_4_0_ from tr_person person0_ where person0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:25:06 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Person#1
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select info0_.id as id1_2_0_, info0_.text as text2_2_0_ from tr_info info0_ where info0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:25:06 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Info#1
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2192) - Loading entity: [translateit2.persistence.model.Project#0]
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_ from tr_project project0_ where project0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] loader.Loader (Loader.java:2221) - Done entity load
DEBUG | 2017-05-26 13:25:06 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_project (id, format, info_id, name, person_id, source_locale, type) values (null, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:06 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_en, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:51) - begin
DEBUG | 2017-05-26 13:25:06 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@318511f0, payload=[Ljava.lang.Class;@53564a4c}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:25:06 | [main] descriptor.ConstraintDescriptorImpl (ConstraintDescriptorImpl.java:640) - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4866e0a7, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@69a294d8}, constraintType=GENERIC}.
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select project0_.id as id1_5_0_, project0_.format as format2_5_0_, project0_.info_id as info_id6_5_0_, project0_.name as name3_5_0_, project0_.person_id as person_i7_5_0_, project0_.source_locale as source_l4_5_0_, project0_.type as type5_5_0_, info1_.id as id1_2_1_, info1_.text as text2_2_1_, person2_.id as id1_4_2_, person2_.full_name as full_nam2_4_2_ from tr_project project0_ left outer join tr_info info1_ on project0_.info_id=info1_.id left outer join tr_person person2_ on project0_.person_id=person2_.id where project0_.id=?
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResultSetProcessorImpl (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
DEBUG | 2017-05-26 13:25:06 | [main] internal.EntityReferenceInitializerImpl (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Project#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Info#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:144) - Resolving associations for [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.TwoPhaseLoad (TwoPhaseLoad.java:274) - Done materializing entity [translateit2.persistence.model.Person#1]
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] plan.AbstractLoadPlanBasedEntityLoader (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : translateit2.persistence.model.Project#1
DEBUG | 2017-05-26 13:25:06 | [main] spi.ActionQueue (ActionQueue.java:272) - Executing identity-insert immediately
DEBUG | 2017-05-26 13:25:06 | [main] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into tr_work (id, backup_file, dead_line, finished, group_id, locale, original_file, priority, progress, project_id, skeleton_file, started, status, version) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG | 2017-05-26 13:25:06 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-22 -> 2017-05-22
DEBUG | 2017-05-26 13:25:06 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : null -> null
DEBUG | 2017-05-26 13:25:06 | [main] converter.AttributeConverterSqlTypeDescriptorAdapter$1 (AttributeConverterSqlTypeDescriptorAdapter.java:87) - Converted value on binding : 2017-05-26 -> 2017-05-26
DEBUG | 2017-05-26 13:25:06 | [main] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:74) - Natively generated identity: 1
DEBUG | 2017-05-26 13:25:06 | [main] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
DEBUG | 2017-05-26 13:25:06 | [main] internal.TransactionImpl (TransactionImpl.java:62) - committing
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG | 2017-05-26 13:25:06 | [main] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Project{sourceLocale=en_EN, person=translateit2.persistence.model.Person#1, format=PROPERTIES, name=Translate IT 2, id=1, type=UTF_8, info=translateit2.persistence.model.Info#1}
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Info{id=1, text=This is info}
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Person{fullName=Ilkka, id=1}
DEBUG | 2017-05-26 13:25:06 | [main] util.EntityPrinter (EntityPrinter.java:109) - translateit2.persistence.model.Work{originalFile=null, project=translateit2.persistence.model.Project#1, finished=null, started=2017-05-26, locale=fi_fi, priority=HIGH, version=0.07, deadLine=2017-05-22, backupFile=null, skeletonFile=skeleton file, progress=0.0, id=1, group=translateit2.persistence.model.TranslatorGroup#1, status=null}
DEBUG | 2017-05-26 13:25:07 | [main] translateit2.LogTest$MyLogger (LogTest.java:19) - This is a debug message
INFO  | 2017-05-26 13:25:07 | [main] translateit2.LogTest$MyLogger (LogTest.java:20) - This is an info message
WARN  | 2017-05-26 13:25:07 | [main] translateit2.LogTest$MyLogger (LogTest.java:21) - This is a warn message
ERROR | 2017-05-26 13:25:07 | [main] translateit2.LogTest$MyLogger (LogTest.java:22) - This is an error message
FATAL | 2017-05-26 13:25:07 | [main] translateit2.LogTest$MyLogger (LogTest.java:23) - This is a fatal message
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] internal.SessionFactoryImpl (SessionFactoryImpl.java:1054) - HHH000031: Closing
INFO  | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:408) - Import file not found: /import.sql
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_comment if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_history if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_info if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_note if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_person if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_project if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_translatorgroup if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_unit if exists
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] spi.SqlStatementLogger (SqlStatementLogger.java:92) - drop table tr_work if exists
INFO  | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] internal.AbstractServiceRegistryImpl (AbstractServiceRegistryImpl.java:407) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] internal.BootstrapServiceRegistryImpl (BootstrapServiceRegistryImpl.java:286) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG | 2017-05-26 13:25:41 | [RMI TCP Connection(2)-192.168.1.9] internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:91) - Remove: name=default
ERROR | 2017-05-26 13:26:13 | [main] translateit2.LogTest$MyLogger (LogTest.java:22) - This is an error message
FATAL | 2017-05-26 13:26:13 | [main] translateit2.LogTest$MyLogger (LogTest.java:23) - This is a fatal message
ERROR | 2017-05-26 13:27:56 | [main] translateit2.LogTest$MyLogger (LogTest.java:22) - This is an error message
FATAL | 2017-05-26 13:27:56 | [main] translateit2.LogTest$MyLogger (LogTest.java:23) - This is a fatal message
INFO  | 2017-05-26 13:28:15 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
INFO  | 2017-05-26 13:28:17 | [main] util.LogHelper (LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
INFO  | 2017-05-26 13:28:17 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 13:28:17 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 13:28:17 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
INFO  | 2017-05-26 13:28:17 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO  | 2017-05-26 13:28:17 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO  | 2017-05-26 13:28:17 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
INFO  | 2017-05-26 13:28:17 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
INFO  | 2017-05-26 13:28:18 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
INFO  | 2017-05-26 13:28:20 | [main] translateit2.LogTest$MyLogger (LogTest.java:20) - This is an info message
WARN  | 2017-05-26 13:28:20 | [main] translateit2.LogTest$MyLogger (LogTest.java:21) - This is a warn message
ERROR | 2017-05-26 13:28:20 | [main] translateit2.LogTest$MyLogger (LogTest.java:22) - This is an error message
FATAL | 2017-05-26 13:28:20 | [main] translateit2.LogTest$MyLogger (LogTest.java:23) - This is a fatal message
INFO  | 2017-05-26 13:28:36 | [background-preinit] util.Version (Version.java:30) - HV000001: Hibernate Validator 5.3.4.Final
INFO  | 2017-05-26 13:28:38 | [main] util.LogHelper (LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
INFO  | 2017-05-26 13:28:38 | [main] hibernate.Version (Version.java:37) - HHH000412: Hibernate Core {5.0.12.Final}
INFO  | 2017-05-26 13:28:38 | [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
INFO  | 2017-05-26 13:28:38 | [main] cfg.Environment (Environment.java:317) - HHH000021: Bytecode provider name : javassist
INFO  | 2017-05-26 13:28:38 | [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO  | 2017-05-26 13:28:38 | [main] dialect.Dialect (Dialect.java:156) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO  | 2017-05-26 13:28:38 | [main] hbm2ddl.SchemaExport (SchemaExport.java:400) - HHH000227: Running hbm2ddl schema export
INFO  | 2017-05-26 13:28:38 | [main] hbm2ddl.SchemaExport (SchemaExport.java:464) - HHH000230: Schema export complete
INFO  | 2017-05-26 13:28:39 | [main] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
INFO  | 2017-05-26 13:28:41 | [main] translateit2.LogTest$MyLogger (LogTest.java:20) - This is an info message
WARN  | 2017-05-26 13:28:41 | [main] translateit2.LogTest$MyLogger (LogTest.java:21) - This is a warn message
ERROR | 2017-05-26 13:28:41 | [main] translateit2.LogTest$MyLogger (LogTest.java:22) - This is an error message
FATAL | 2017-05-26 13:28:41 | [main] translateit2.LogTest$MyLogger (LogTest.java:23) - This is a fatal message
