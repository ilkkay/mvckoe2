package translateit2.configuration;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import translateit2.fileloader.FileLoadError;
import translateit2.fileloader.FileLoaderException;
import translateit2.languagebeancache.LanguageBeanCache;
import translateit2.languagebeancache.reader.LanguageFileReader;
import translateit2.languagebeancache.validator.LanguageFileValidator;
import translateit2.languagebeancache.writer.LanguageFileWriter;
import translateit2.languagefile.LanguageFileFormat;
import translateit2.service.LoadingContractorImpl;

@Component
public class LanguageServicesConfig {
    static final Logger logger = LogManager.getLogger(LanguageServicesConfig.class);

    @Autowired
    private LanguageBeanCache<LanguageFileFormat, LanguageFileReader> fileReaderCache;

    @Autowired
    private LanguageBeanCache<LanguageFileFormat, LanguageFileWriter> fileWriterCache;

    @Autowired
    private LanguageBeanCache<LanguageFileFormat, LanguageFileValidator> fileValidatorCache;

    private void listServices() {
        LanguageFileValidator validator = fileValidatorCache.getService(LanguageFileFormat.PROPERTIES).get();
        
    }
    
    private void checkServiceAvailability(LanguageFileFormat format) throws FileLoaderException {
        if (!(fileValidatorCache.getService(format).isPresent())) {
            logger.error("Language file validator for format {} was missing", format);
        }      

        if (!(fileReaderCache.getService(format).isPresent())) {
            logger.error("Language file reader for format {} was missing", format);
            throw new FileLoaderException(FileLoadError.CANNOT_UPLOAD_FILE); // or something
        }

        if (!(fileWriterCache.getService(format).isPresent())) {
            logger.error("Language file writer for format {} was missing", format);
            throw new FileLoaderException(FileLoadError.CANNOT_UPLOAD_FILE); // or something
        }
    }
}
