package translateit2.validator;

import static org.assertj.core.api.Assertions.assertThatThrownBy;
import static org.junit.Assert.*;

import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.runners.MockitoJUnitRunner;

import translateit2.fileloader.FileLoaderException;
import translateit2.filenameresolver.FileNameResolver;
import translateit2.filenameresolver.FileNameResolverImpl;
import translateit2.languagefactory.LanguageFileValidator;
import translateit2.languagefactory.PropertiesFileValidatorImpl;
import translateit2.lngfileservice.LanguageFileFormat;

@RunWith(MockitoJUnitRunner.class)
public class LanguageFileValidatorUnitTest {

    @BeforeClass
    public static void setUpBeforeClass() throws Exception {
    }

    @Before
    public void setUp() throws Exception {
    }


    @Test
    public void test() {
        fail("Not yet implemented");
    }
    
    @Test
    public void testUTF8Charset_failIfIso8859Charset() {

        
        Path uploadedFile = Paths.get("D:\\dotcms_fi.properties");
        
        assertThatThrownBy(() -> validator().validate(uploadedFile,  
                LanguageFileFormat.PROPERTIES, 
                StandardCharsets.UTF_8))
        .isExactlyInstanceOf(FileLoaderException.class);        


    }

    private LanguageFileValidator validator() {
        return new PropertiesFileValidatorImpl();
    }

}
