package translateit2.languagefactory;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.nio.charset.MalformedInputException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.stereotype.Component;

import translateit2.fileloader.FileLoaderException;
import translateit2.lngfileservice.LanguageFileFormat;
import translateit2.util.OrderedProperties;

@Component
public class PropertiesFileValidatorImpl implements LanguageFileValidator {

    public PropertiesFileValidatorImpl() {
        // TODO Auto-generated constructor stub
    }

    @Override
    public LanguageFileFormat getFileFormat() {
        return LanguageFileFormat.PROPERTIES;
    }

    private boolean isCorrectCharset(Path uploadedLngFile, Charset charset) throws FileLoaderException {
        try {
            Files.readAllLines(uploadedLngFile, charset);
        } catch (MalformedInputException e) {
            return false; // do nothing is OK
        } catch (IOException e) {
            throw new FileLoaderException("Unexpected exception thrown while testing charset of a properties file");
        }
        return true; // if charset == UTF8 and no exceptions => file is UTF8
    }

    @Override
    public void validate(Path uploadedLngFile, LanguageFileFormat format, Charset charset) {
        isCorrectCharset(uploadedLngFile, charset);
        
    }


}
